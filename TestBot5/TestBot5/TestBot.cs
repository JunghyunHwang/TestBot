using System.Diagnostics;
using System.Text;

namespace Training5
{
    public class TestBot
    {
        private static readonly StringBuilder failTest = new StringBuilder(1024);

        public static void StartTest()
        {
            uint totalScore = 0;

            totalScore += testRotate90Degrees();
            totalScore += testHorizontalMirror();
            totalScore += testVerticalMirror();
            totalScore += testDiagonalShift();

            Console.WriteLine($"Your score: {totalScore}/100");

            if (failTest.Length == 0)
            {
                Console.WriteLine("Good job!");
                return;
            }

            Console.WriteLine();
            Console.WriteLine("========== Fail test list ==========");
            Console.WriteLine(failTest.ToString());
        }

        private static bool IsSameArray(int[,] expected, int[,] actual)
        {
            if (expected.GetLength(0) != actual.GetLength(0))
            {
                return false;
            }
            else if (expected.GetLength(1) != actual.GetLength(1))
            {
                return false;
            }

            for (int i = 0; i < expected.GetLength(0); ++i)
            {
                for (int j = 0; j < expected.GetLength(1); ++j)
                {
                    if (expected[i, j] != actual[i, j])
                    {
                        return false;
                    }
                }
            }

            return true;
        }

        private static uint testRotate90Degrees()
        {
            uint score = 25;

            if (!A00())
            {
                failTest.Append("A00: 1x1 Array");
                score -= 3;
            }

            if (!A01())
            {
                failTest.Append("A01: Only row array");
                score -= 3;
            }

            if (!A02())
            {
                failTest.Append("A02: Only column array");
                score -= 3;
            }

            if (!A03())
            {
                failTest.Append("A03: NxN Array");
                score -= 3;
            }

            if (!A04())
            {
                failTest.Append("A04: Longer column array");
                score -= 4;
            }

            if (!A05())
            {
                failTest.Append("A05: Longer row array");
                score -= 4;
            }

            return score;
        }

        private static uint testHorizontalMirror()
        {
            uint score = 25;

            if (!B00())
            {
                failTest.Append("B00: 1x1 Array");
                score -= 4;
            }

            if (!B01())
            {
                failTest.Append("B01: Only row array");
                score -= 4;
            }

            if (!B02())
            {
                failTest.Append("B02: Only column array");
                score -= 4;
            }

            if (!B03())
            {
                failTest.Append("B03: NxN Array");
                score -= 4;
            }

            if (!B04())
            {
                failTest.Append("B04: Longer column array");
                score -= 4;
            }

            if (!B05())
            {
                failTest.Append("B05: Longer row array");
                score -= 5;
            }

            return score;
        }

        private static uint testVerticalMirror()
        {
            uint score = 25;

            if (!C00())
            {
                failTest.Append("C00: 1x1 Array");
                score -= 4;
            }

            if (!C01())
            {
                failTest.Append("C01: Only row array");
                score -= 4;
            }

            if (!C02())
            {
                failTest.Append("C02: Only column array");
                score -= 4;
            }

            if (!C03())
            {
                failTest.Append("C03: NxN Array");
                score -= 4;
            }

            if (!C04())
            {
                failTest.Append("C04: Longer column array");
                score -= 4;
            }

            if (!C05())
            {
                failTest.Append("C05: Longer row array");
                score -= 5;
            }

            return score;
        }

        private static uint testDiagonalShift()
        {
            uint score = 25;

            if (!D00())
            {
                failTest.Append("D00: 1x1 Array");
                score -= 4;
            }

            if (!D01())
            {
                failTest.Append("D01: Only row array");
                score -= 4;
            }

            if (!D02())
            {
                failTest.Append("D02: Only column array");
                score -= 4;
            }

            if (!D03())
            {
                failTest.Append("D03: NxN Array");
                score -= 4;
            }

            if (!D04())
            {
                failTest.Append("D04: Longer column array");
                score -= 4;
            }

            if (!D05())
            {
                failTest.Append("D05: Longer row array");
                score -= 5;
            }

            return score;
        }

        private static bool A00()
        {
            int[,] onlyOneData = { { 3 } };

            var result = Transform.Rotate90Degrees(onlyOneData);

            if (result[0, 0] != 3)
            {
                return false;
            }

            onlyOneData[0, 0] = 7;
            result = Transform.Rotate90Degrees(onlyOneData);

            if (result[0, 0] != 7)
            {
                return false;
            }

            onlyOneData[0, 0] = 9;
            result = Transform.Rotate90Degrees(onlyOneData);

            if (result[0, 0] != 9)
            {
                return false;
            }

            return true;
        }

        private static bool A01()
        {
            int[,] table1 =
            {
                { 205, 149, 23, 104, 55, 190, 39, 87, 73, 155, 220, },
            };

            int[,] expected1 =
            {
                { 205, },
                { 149, },
                { 23, },
                { 104, },
                { 55, },
                { 190, },
                { 39, },
                { 87, },
                { 73, },
                { 155, },
                { 220, },
            };

            var result = Transform.Rotate90Degrees(table1);

            if (!IsSameArray(expected1, result))
            {
                return false;
            }

            int[,] table2 =
            {
                { 61, 32, 122, 212, 42, 36, 187, 172, 179, 189, 204, 80, 69, 56, 93, },
            };

            int[,] expected2 =
            {
                { 61, },
                { 32, },
                { 122, },
                { 212, },
                { 42, },
                { 36, },
                { 187, },
                { 172, },
                { 179, },
                { 189, },
                { 204, },
                { 80, },
                { 69, },
                { 56, },
                { 93, },
            };

            result = Transform.Rotate90Degrees(table2);
            if (!IsSameArray(expected2, result))
            {
                return false;
            }

            int[,] table3 =
            {
                { 132, 226, 223, 76, 32, 116, 186, 149, 11, 179, 214, 67, 176, 41, 124, 24, 120, 131, 218, 50, },
            };

            int[,] expected3 =
            {
                { 132, },
                { 226, },
                { 223, },
                { 76, },
                { 32, },
                { 116, },
                { 186, },
                { 149, },
                { 11, },
                { 179, },
                { 214, },
                { 67, },
                { 176, },
                { 41, },
                { 124, },
                { 24, },
                { 120, },
                { 131, },
                { 218, },
                { 50, },
            };

            result = Transform.Rotate90Degrees(table3);
            if (!IsSameArray(expected3, result))
            {
                return false;
            }

            return true;
        }

        private static bool A02()
        {
            int[,] table4 =
            {
                { 15, },
                { 140, },
                { 139, },
                { 202, },
                { 73, },
                { 16, },
                { 20, },
                { 165, },
                { 20, },
                { 222, },
                { 247, },
            };

            int[,] expected4 =
            {
                { 247, 222, 20, 165, 20, 16, 73, 202, 139, 140, 15, },
            };

            var result = Transform.Rotate90Degrees(table4);
            if (!IsSameArray(expected4, result))
            {
                return false;
            }

            int[,] table5 =
            {
                { 232, },
                { 29, },
                { 181, },
                { 117, },
                { 54, },
                { 126, },
                { 156, },
                { 88, },
                { 28, },
                { 97, },
                { 50, },
                { 143, },
                { 238, },
                { 156, },
                { 52, },
            };

            int[,] expected5 =
            {
                { 52, 156, 238, 143, 50, 97, 28, 88, 156, 126, 54, 117, 181, 29, 232, },
            };

            result = Transform.Rotate90Degrees(table5);
            if (!IsSameArray(expected5, result))
            {
                return false;
            }

            int[,] table6 =
            {
                { 246, },
                { 88, },
                { 168, },
                { 170, },
                { 41, },
                { 41, },
                { 33, },
                { 239, },
                { 149, },
                { 133, },
                { 252, },
                { 74, },
                { 72, },
                { 239, },
                { 148, },
                { 176, },
                { 38, },
                { 24, },
                { 45, },
                { 36, },
            };

            int[,] expected6 =
            {
                { 36, 45, 24, 38, 176, 148, 239, 72, 74, 252, 133, 149, 239, 33, 41, 41, 170, 168, 88, 246, },
            };

            result = Transform.Rotate90Degrees(table6);
            if (!IsSameArray(expected6, result))
            {
                return false;
            }
            return true;
        }

        private static bool A03()
        {
            int[,] table7 =
            {
                { 57, 13, 138, 132, 86, 100, 183, 118, 125, 73, 236, },
                { 175, 34, 18, 213, 26, 75, 170, 108, 179, 13, 226, },
                { 205, 145, 10, 17, 153, 122, 118, 162, 188, 114, 132, },
                { 86, 116, 14, 116, 164, 252, 144, 200, 82, 10, 241, },
                { 37, 192, 247, 177, 202, 173, 94, 93, 163, 217, 194, },
                { 228, 22, 122, 123, 210, 142, 92, 154, 197, 90, 56, },
                { 47, 163, 223, 137, 80, 44, 63, 78, 214, 103, 32, },
                { 116, 153, 83, 180, 104, 160, 29, 80, 71, 232, 152, },
                { 183, 160, 43, 24, 170, 78, 57, 232, 37, 71, 189, },
                { 177, 242, 94, 176, 61, 98, 69, 140, 42, 175, 241, },
                { 24, 33, 139, 52, 248, 151, 174, 60, 241, 38, 126, },
            };

            int[,] expected7 =
            {
                { 24, 177, 183, 116, 47, 228, 37, 86, 205, 175, 57, },
                { 33, 242, 160, 153, 163, 22, 192, 116, 145, 34, 13, },
                { 139, 94, 43, 83, 223, 122, 247, 14, 10, 18, 138, },
                { 52, 176, 24, 180, 137, 123, 177, 116, 17, 213, 132, },
                { 248, 61, 170, 104, 80, 210, 202, 164, 153, 26, 86, },
                { 151, 98, 78, 160, 44, 142, 173, 252, 122, 75, 100, },
                { 174, 69, 57, 29, 63, 92, 94, 144, 118, 170, 183, },
                { 60, 140, 232, 80, 78, 154, 93, 200, 162, 108, 118, },
                { 241, 42, 37, 71, 214, 197, 163, 82, 188, 179, 125, },
                { 38, 175, 71, 232, 103, 90, 217, 10, 114, 13, 73, },
                { 126, 241, 189, 152, 32, 56, 194, 241, 132, 226, 236, },
            };

            var result = Transform.Rotate90Degrees(table7);
            if (!IsSameArray(expected7, result))
            {
                return false;
            }

            int[,] table8 =
            {
                { 46, 234, 232, 244, 80, 251, 250, 141, 155, 113, 72, 232, 125, 221, 240, },
                { 96, 97, 68, 168, 96, 194, 82, 91, 65, 211, 167, 215, 160, 91, 49, },
                { 192, 22, 188, 235, 252, 215, 198, 105, 132, 131, 83, 195, 245, 70, 18, },
                { 64, 24, 184, 185, 98, 160, 149, 176, 73, 14, 85, 231, 193, 56, 160, },
                { 151, 28, 215, 112, 225, 224, 182, 235, 106, 34, 46, 110, 186, 111, 153, },
                { 176, 171, 130, 167, 58, 19, 178, 254, 148, 14, 182, 173, 109, 216, 80, },
                { 143, 74, 75, 159, 79, 147, 184, 135, 237, 197, 41, 52, 48, 26, 153, },
                { 147, 50, 106, 166, 82, 166, 187, 228, 53, 13, 132, 204, 177, 34, 162, },
                { 192, 188, 213, 150, 29, 181, 199, 215, 160, 63, 235, 170, 62, 110, 76, },
                { 234, 33, 15, 16, 175, 230, 238, 77, 128, 89, 142, 246, 111, 204, 201, },
                { 66, 105, 16, 248, 191, 153, 208, 53, 233, 114, 250, 165, 133, 246, 44, },
                { 96, 71, 72, 13, 158, 188, 171, 127, 202, 240, 207, 33, 78, 222, 200, },
                { 149, 237, 91, 113, 70, 116, 36, 163, 100, 156, 229, 21, 212, 243, 59, },
                { 202, 223, 61, 53, 175, 125, 37, 110, 78, 200, 187, 166, 201, 25, 73, },
                { 70, 113, 226, 102, 243, 53, 139, 20, 215, 165, 209, 130, 201, 181, 31, },
            };

            int[,] expected8 =
            {
                { 70, 202, 149, 96, 66, 234, 192, 147, 143, 176, 151, 64, 192, 96, 46, },
                { 113, 223, 237, 71, 105, 33, 188, 50, 74, 171, 28, 24, 22, 97, 234, },
                { 226, 61, 91, 72, 16, 15, 213, 106, 75, 130, 215, 184, 188, 68, 232, },
                { 102, 53, 113, 13, 248, 16, 150, 166, 159, 167, 112, 185, 235, 168, 244, },
                { 243, 175, 70, 158, 191, 175, 29, 82, 79, 58, 225, 98, 252, 96, 80, },
                { 53, 125, 116, 188, 153, 230, 181, 166, 147, 19, 224, 160, 215, 194, 251, },
                { 139, 37, 36, 171, 208, 238, 199, 187, 184, 178, 182, 149, 198, 82, 250, },
                { 20, 110, 163, 127, 53, 77, 215, 228, 135, 254, 235, 176, 105, 91, 141, },
                { 215, 78, 100, 202, 233, 128, 160, 53, 237, 148, 106, 73, 132, 65, 155, },
                { 165, 200, 156, 240, 114, 89, 63, 13, 197, 14, 34, 14, 131, 211, 113, },
                { 209, 187, 229, 207, 250, 142, 235, 132, 41, 182, 46, 85, 83, 167, 72, },
                { 130, 166, 21, 33, 165, 246, 170, 204, 52, 173, 110, 231, 195, 215, 232, },
                { 201, 201, 212, 78, 133, 111, 62, 177, 48, 109, 186, 193, 245, 160, 125, },
                { 181, 25, 243, 222, 246, 204, 110, 34, 26, 216, 111, 56, 70, 91, 221, },
                { 31, 73, 59, 200, 44, 201, 76, 162, 153, 80, 153, 160, 18, 49, 240, },
            };

            result = Transform.Rotate90Degrees(table8);
            if (!IsSameArray(expected8, result))
            {
                return false;
            }

            int[,] table9 =
            {
                { 132, 94, 219, 79, 168, 47, 143, 120, 62, 55, 179, 230, 29, 88, 220, 86, 71, 84, 14, 94, },
                { 207, 239, 133, 69, 163, 203, 214, 117, 239, 162, 221, 70, 122, 74, 34, 191, 51, 19, 62, 16, },
                { 152, 203, 65, 146, 225, 154, 212, 179, 36, 189, 227, 11, 49, 197, 82, 193, 228, 227, 110, 223, },
                { 26, 23, 234, 104, 51, 109, 186, 21, 95, 151, 79, 39, 82, 199, 71, 211, 130, 79, 167, 216, },
                { 173, 233, 175, 47, 229, 59, 245, 248, 22, 150, 140, 162, 46, 176, 75, 195, 148, 82, 64, 175, },
                { 22, 204, 248, 249, 178, 151, 157, 79, 12, 112, 17, 203, 98, 26, 91, 176, 102, 25, 24, 42, },
                { 169, 232, 182, 190, 20, 86, 247, 169, 63, 231, 200, 156, 142, 29, 150, 34, 130, 155, 63, 167, },
                { 165, 20, 226, 246, 229, 33, 180, 36, 102, 102, 24, 192, 22, 199, 96, 83, 130, 181, 103, 173, },
                { 178, 250, 134, 185, 16, 50, 37, 107, 229, 224, 206, 233, 151, 11, 157, 215, 156, 91, 232, 238, },
                { 235, 60, 202, 106, 228, 95, 87, 224, 114, 31, 213, 109, 113, 14, 238, 149, 54, 81, 141, 215, },
                { 146, 222, 200, 73, 163, 173, 64, 232, 55, 199, 27, 209, 224, 62, 177, 22, 75, 13, 90, 134, },
                { 82, 147, 15, 46, 74, 187, 239, 130, 20, 110, 253, 34, 200, 227, 63, 247, 93, 117, 159, 247, },
                { 125, 60, 74, 107, 14, 75, 180, 248, 228, 217, 78, 40, 12, 35, 171, 46, 18, 120, 157, 58, },
                { 32, 106, 168, 118, 74, 217, 96, 103, 21, 162, 95, 172, 217, 51, 54, 221, 236, 84, 253, 159, },
                { 115, 24, 215, 69, 166, 186, 245, 67, 147, 75, 173, 248, 210, 52, 113, 61, 121, 116, 254, 215, },
                { 69, 170, 114, 48, 116, 210, 126, 253, 231, 195, 117, 205, 207, 20, 186, 92, 172, 156, 195, 167, },
                { 84, 145, 157, 199, 12, 16, 27, 46, 120, 36, 244, 20, 148, 216, 185, 25, 147, 180, 246, 162, },
                { 252, 252, 117, 119, 181, 178, 64, 235, 72, 17, 127, 135, 238, 129, 67, 249, 244, 139, 40, 61, },
                { 169, 137, 61, 79, 95, 203, 74, 175, 59, 171, 15, 177, 239, 60, 203, 189, 114, 211, 205, 113, },
                { 54, 99, 45, 196, 253, 83, 136, 214, 96, 208, 230, 207, 22, 126, 32, 109, 55, 24, 70, 201, },
            };      

            int[,] expected9 =
            {
                { 54, 169, 252, 84, 69, 115, 32, 125, 82, 146, 235, 178, 165, 169, 22, 173, 26, 152, 207, 132, },
                { 99, 137, 252, 145, 170, 24, 106, 60, 147, 222, 60, 250, 20, 232, 204, 233, 23, 203, 239, 94, },
                { 45, 61, 117, 157, 114, 215, 168, 74, 15, 200, 202, 134, 226, 182, 248, 175, 234, 65, 133, 219, },
                { 196, 79, 119, 199, 48, 69, 118, 107, 46, 73, 106, 185, 246, 190, 249, 47, 104, 146, 69, 79, },
                { 253, 95, 181, 12, 116, 166, 74, 14, 74, 163, 228, 16, 229, 20, 178, 229, 51, 225, 163, 168, },
                { 83, 203, 178, 16, 210, 186, 217, 75, 187, 173, 95, 50, 33, 86, 151, 59, 109, 154, 203, 47, },
                { 136, 74, 64, 27, 126, 245, 96, 180, 239, 64, 87, 37, 180, 247, 157, 245, 186, 212, 214, 143, },
                { 214, 175, 235, 46, 253, 67, 103, 248, 130, 232, 224, 107, 36, 169, 79, 248, 21, 179, 117, 120, },
                { 96, 59, 72, 120, 231, 147, 21, 228, 20, 55, 114, 229, 102, 63, 12, 22, 95, 36, 239, 62, },
                { 208, 171, 17, 36, 195, 75, 162, 217, 110, 199, 31, 224, 102, 231, 112, 150, 151, 189, 162, 55, },
                { 230, 15, 127, 244, 117, 173, 95, 78, 253, 27, 213, 206, 24, 200, 17, 140, 79, 227, 221, 179, },
                { 207, 177, 135, 20, 205, 248, 172, 40, 34, 209, 109, 233, 192, 156, 203, 162, 39, 11, 70, 230, },
                { 22, 239, 238, 148, 207, 210, 217, 12, 200, 224, 113, 151, 22, 142, 98, 46, 82, 49, 122, 29, },
                { 126, 60, 129, 216, 20, 52, 51, 35, 227, 62, 14, 11, 199, 29, 26, 176, 199, 197, 74, 88, },
                { 32, 203, 67, 185, 186, 113, 54, 171, 63, 177, 238, 157, 96, 150, 91, 75, 71, 82, 34, 220, },
                { 109, 189, 249, 25, 92, 61, 221, 46, 247, 22, 149, 215, 83, 34, 176, 195, 211, 193, 191, 86, },
                { 55, 114, 244, 147, 172, 121, 236, 18, 93, 75, 54, 156, 130, 130, 102, 148, 130, 228, 51, 71, },
                { 24, 211, 139, 180, 156, 116, 84, 120, 117, 13, 81, 91, 181, 155, 25, 82, 79, 227, 19, 84, },
                { 70, 205, 40, 246, 195, 254, 253, 157, 159, 90, 141, 232, 103, 63, 24, 64, 167, 110, 62, 14, },
                { 201, 113, 61, 162, 167, 215, 159, 58, 247, 134, 215, 238, 173, 167, 42, 175, 216, 223, 16, 94, },
            };

            result = Transform.Rotate90Degrees(table9);
            if (!IsSameArray(expected9, result))
            {
                return false;
            }

            return true;
        }

        private static bool A04()
        {
            int[,] table10 =
            {
                { 239, 126, 115, 47, 109, 37, 134, 161, 87, 31, 51, },
                { 28, 24, 203, 128, 96, 132, 182, 112, 217, 38, 201, },
                { 174, 167, 63, 85, 221, 220, 220, 105, 232, 56, 218, },
                { 183, 143, 246, 192, 11, 178, 244, 181, 236, 161, 239, },
                { 115, 198, 194, 17, 19, 176, 236, 188, 106, 201, 82, },
                { 142, 212, 108, 179, 205, 140, 129, 213, 248, 237, 172, },
                { 50, 114, 248, 244, 106, 111, 204, 142, 27, 39, 136, },
            };

            int[,] expected10 =
            {
                { 50, 142, 115, 183, 174, 28, 239, },
                { 114, 212, 198, 143, 167, 24, 126, },
                { 248, 108, 194, 246, 63, 203, 115, },
                { 244, 179, 17, 192, 85, 128, 47, },
                { 106, 205, 19, 11, 221, 96, 109, },
                { 111, 140, 176, 178, 220, 132, 37, },
                { 204, 129, 236, 244, 220, 182, 134, },
                { 142, 213, 188, 181, 105, 112, 161, },
                { 27, 248, 106, 236, 232, 217, 87, },
                { 39, 237, 201, 161, 56, 38, 31, },
                { 136, 172, 82, 239, 218, 201, 51, },
            };

            var result = Transform.Rotate90Degrees(table10);
            if (!IsSameArray(expected10, result))
            {
                return false;
            }

            int[,] table11 =
            {
                { 122, 215, 47, 72, 206, 68, 32, 49, 75, 122, 69, 217, 110, 228, 135, },
                { 241, 173, 146, 130, 90, 101, 110, 80, 132, 52, 225, 231, 225, 61, 180, },
                { 127, 73, 155, 90, 108, 83, 84, 242, 253, 247, 192, 70, 199, 146, 143, },
                { 77, 93, 109, 196, 88, 51, 247, 43, 156, 158, 220, 186, 18, 184, 49, },
                { 84, 121, 250, 144, 55, 252, 133, 226, 230, 44, 43, 58, 230, 225, 100, },
                { 175, 251, 35, 119, 244, 172, 148, 194, 66, 39, 31, 205, 156, 163, 31, },
                { 199, 35, 192, 21, 250, 66, 177, 163, 110, 152, 141, 148, 97, 135, 118, },
                { 167, 155, 234, 130, 116, 159, 217, 135, 223, 46, 215, 88, 151, 196, 217, },
                { 252, 73, 249, 103, 156, 173, 243, 121, 210, 169, 99, 126, 126, 131, 233, },
                { 13, 85, 243, 31, 218, 108, 26, 53, 52, 253, 31, 197, 42, 100, 139, },
                { 253, 235, 154, 33, 135, 59, 217, 15, 188, 108, 189, 249, 114, 197, 180, },
            };

            int[,] expected11 =
            {
                { 253, 13, 252, 167, 199, 175, 84, 77, 127, 241, 122, },
                { 235, 85, 73, 155, 35, 251, 121, 93, 73, 173, 215, },
                { 154, 243, 249, 234, 192, 35, 250, 109, 155, 146, 47, },
                { 33, 31, 103, 130, 21, 119, 144, 196, 90, 130, 72, },
                { 135, 218, 156, 116, 250, 244, 55, 88, 108, 90, 206, },
                { 59, 108, 173, 159, 66, 172, 252, 51, 83, 101, 68, },
                { 217, 26, 243, 217, 177, 148, 133, 247, 84, 110, 32, },
                { 15, 53, 121, 135, 163, 194, 226, 43, 242, 80, 49, },
                { 188, 52, 210, 223, 110, 66, 230, 156, 253, 132, 75, },
                { 108, 253, 169, 46, 152, 39, 44, 158, 247, 52, 122, },
                { 189, 31, 99, 215, 141, 31, 43, 220, 192, 225, 69, },
                { 249, 197, 126, 88, 148, 205, 58, 186, 70, 231, 217, },
                { 114, 42, 126, 151, 97, 156, 230, 18, 199, 225, 110, },
                { 197, 100, 131, 196, 135, 163, 225, 184, 146, 61, 228, },
                { 180, 139, 233, 217, 118, 31, 100, 49, 143, 180, 135, },
            };

            result = Transform.Rotate90Degrees(table11);
            if (!IsSameArray(expected11, result))
            {
                return false;
            }

            int[,] table12 =
            {
                { 35, 22, 231, 220, 159, 132, 208, 159, 165, 17, 213, 18, 53, 247, 166, 49, 181, 96, 102, 137, },
                { 235, 240, 12, 245, 52, 17, 156, 36, 163, 125, 158, 53, 152, 198, 24, 21, 141, 208, 81, 25, },
                { 27, 70, 59, 192, 46, 116, 227, 144, 64, 95, 220, 48, 223, 232, 81, 142, 236, 64, 71, 106, },
                { 40, 237, 132, 113, 57, 101, 125, 105, 143, 212, 167, 134, 122, 36, 16, 134, 178, 209, 29, 238, },
                { 241, 100, 218, 203, 167, 118, 236, 230, 232, 203, 253, 242, 28, 127, 114, 11, 116, 28, 35, 118, },
                { 23, 153, 190, 21, 219, 75, 226, 70, 51, 140, 46, 124, 126, 163, 51, 139, 84, 19, 207, 122, },
                { 39, 209, 233, 105, 138, 41, 17, 87, 179, 19, 91, 108, 236, 65, 212, 17, 233, 134, 196, 202, },
                { 11, 66, 230, 79, 101, 25, 80, 151, 104, 233, 147, 226, 100, 146, 244, 54, 241, 66, 166, 209, },
                { 107, 176, 45, 65, 111, 244, 54, 171, 138, 19, 43, 167, 121, 217, 45, 251, 130, 126, 155, 47, },
                { 131, 148, 163, 30, 55, 188, 113, 67, 136, 30, 33, 227, 251, 39, 109, 78, 207, 195, 81, 193, },
                { 130, 58, 87, 47, 120, 228, 92, 45, 168, 229, 90, 63, 206, 88, 209, 149, 48, 201, 112, 192, },
                { 49, 62, 134, 99, 234, 144, 175, 215, 171, 84, 192, 57, 250, 243, 248, 15, 45, 218, 240, 64, },
                { 49, 33, 210, 188, 142, 200, 220, 165, 145, 20, 178, 254, 199, 13, 27, 54, 121, 41, 220, 149, },
                { 143, 147, 15, 24, 239, 163, 177, 139, 46, 219, 78, 231, 184, 140, 41, 85, 171, 131, 56, 94, },
                { 115, 188, 177, 31, 191, 90, 86, 175, 174, 251, 55, 133, 176, 177, 208, 53, 228, 171, 143, 223, },
            };

            int[,] expected12 =
            {
                { 115, 143, 49, 49, 130, 131, 107, 11, 39, 23, 241, 40, 27, 235, 35, },
                { 188, 147, 33, 62, 58, 148, 176, 66, 209, 153, 100, 237, 70, 240, 22, },
                { 177, 15, 210, 134, 87, 163, 45, 230, 233, 190, 218, 132, 59, 12, 231, },
                { 31, 24, 188, 99, 47, 30, 65, 79, 105, 21, 203, 113, 192, 245, 220, },
                { 191, 239, 142, 234, 120, 55, 111, 101, 138, 219, 167, 57, 46, 52, 159, },
                { 90, 163, 200, 144, 228, 188, 244, 25, 41, 75, 118, 101, 116, 17, 132, },
                { 86, 177, 220, 175, 92, 113, 54, 80, 17, 226, 236, 125, 227, 156, 208, },
                { 175, 139, 165, 215, 45, 67, 171, 151, 87, 70, 230, 105, 144, 36, 159, },
                { 174, 46, 145, 171, 168, 136, 138, 104, 179, 51, 232, 143, 64, 163, 165, },
                { 251, 219, 20, 84, 229, 30, 19, 233, 19, 140, 203, 212, 95, 125, 17, },
                { 55, 78, 178, 192, 90, 33, 43, 147, 91, 46, 253, 167, 220, 158, 213, },
                { 133, 231, 254, 57, 63, 227, 167, 226, 108, 124, 242, 134, 48, 53, 18, },
                { 176, 184, 199, 250, 206, 251, 121, 100, 236, 126, 28, 122, 223, 152, 53, },
                { 177, 140, 13, 243, 88, 39, 217, 146, 65, 163, 127, 36, 232, 198, 247, },
                { 208, 41, 27, 248, 209, 109, 45, 244, 212, 51, 114, 16, 81, 24, 166, },
                { 53, 85, 54, 15, 149, 78, 251, 54, 17, 139, 11, 134, 142, 21, 49, },
                { 228, 171, 121, 45, 48, 207, 130, 241, 233, 84, 116, 178, 236, 141, 181, },
                { 171, 131, 41, 218, 201, 195, 126, 66, 134, 19, 28, 209, 64, 208, 96, },
                { 143, 56, 220, 240, 112, 81, 155, 166, 196, 207, 35, 29, 71, 81, 102, },
                { 223, 94, 149, 64, 192, 193, 47, 209, 202, 122, 118, 238, 106, 25, 137, },
            };

            result = Transform.Rotate90Degrees(table12);
            if (!IsSameArray(expected12, result))
            {
                return false;
            }

            return true;
        }

        private static bool A05()
        {
            int[,] table13 =
            {
                { 146, 147, 187, 127, 74, 38, 13, },
                { 36, 130, 234, 127, 138, 212, 101, },
                { 98, 132, 243, 220, 247, 140, 139, },
                { 252, 28, 174, 154, 122, 21, 33, },
                { 118, 138, 61, 54, 121, 60, 165, },
                { 240, 243, 250, 117, 170, 122, 254, },
                { 93, 133, 189, 226, 187, 37, 14, },
                { 54, 106, 181, 238, 207, 183, 167, },
                { 17, 168, 182, 136, 137, 89, 139, },
                { 61, 191, 247, 193, 64, 88, 47, },
                { 251, 78, 21, 108, 42, 217, 38, },
            };

            int[,] expected13 =
            {
                { 251, 61, 17, 54, 93, 240, 118, 252, 98, 36, 146, },
                { 78, 191, 168, 106, 133, 243, 138, 28, 132, 130, 147, },
                { 21, 247, 182, 181, 189, 250, 61, 174, 243, 234, 187, },
                { 108, 193, 136, 238, 226, 117, 54, 154, 220, 127, 127, },
                { 42, 64, 137, 207, 187, 170, 121, 122, 247, 138, 74, },
                { 217, 88, 89, 183, 37, 122, 60, 21, 140, 212, 38, },
                { 38, 47, 139, 167, 14, 254, 165, 33, 139, 101, 13, },
            };

            var result = Transform.Rotate90Degrees(table13);
            if (!IsSameArray(expected13, result))
            {
                return false;
            }

            int[,] table14 =
            {
                { 143, 248, 237, 88, 30, 156, 55, 207, 233, 51, 155, },
                { 82, 251, 75, 143, 204, 69, 46, 94, 110, 30, 240, },
                { 141, 250, 152, 104, 39, 249, 58, 86, 156, 199, 195, },
                { 146, 83, 123, 188, 229, 254, 162, 223, 86, 14, 216, },
                { 49, 85, 93, 22, 71, 75, 10, 181, 129, 175, 101, },
                { 138, 34, 124, 209, 219, 208, 242, 205, 151, 201, 100, },
                { 52, 237, 181, 168, 177, 254, 191, 145, 125, 80, 236, },
                { 182, 49, 82, 232, 196, 197, 253, 181, 77, 146, 223, },
                { 143, 80, 60, 57, 147, 172, 191, 40, 241, 28, 168, },
                { 58, 19, 148, 66, 215, 230, 21, 15, 37, 72, 248, },
                { 225, 161, 34, 61, 217, 142, 192, 217, 195, 28, 47, },
                { 238, 244, 184, 126, 233, 226, 138, 79, 39, 218, 35, },
                { 162, 128, 12, 103, 242, 146, 207, 23, 244, 134, 21, },
                { 125, 45, 219, 56, 121, 89, 165, 84, 131, 207, 233, },
                { 37, 161, 40, 129, 74, 117, 72, 67, 204, 165, 119, },
            };

            int[,] expected14 =
            {
                { 37, 125, 162, 238, 225, 58, 143, 182, 52, 138, 49, 146, 141, 82, 143, },
                { 161, 45, 128, 244, 161, 19, 80, 49, 237, 34, 85, 83, 250, 251, 248, },
                { 40, 219, 12, 184, 34, 148, 60, 82, 181, 124, 93, 123, 152, 75, 237, },
                { 129, 56, 103, 126, 61, 66, 57, 232, 168, 209, 22, 188, 104, 143, 88, },
                { 74, 121, 242, 233, 217, 215, 147, 196, 177, 219, 71, 229, 39, 204, 30, },
                { 117, 89, 146, 226, 142, 230, 172, 197, 254, 208, 75, 254, 249, 69, 156, },
                { 72, 165, 207, 138, 192, 21, 191, 253, 191, 242, 10, 162, 58, 46, 55, },
                { 67, 84, 23, 79, 217, 15, 40, 181, 145, 205, 181, 223, 86, 94, 207, },
                { 204, 131, 244, 39, 195, 37, 241, 77, 125, 151, 129, 86, 156, 110, 233, },
                { 165, 207, 134, 218, 28, 72, 28, 146, 80, 201, 175, 14, 199, 30, 51, },
                { 119, 233, 21, 35, 47, 248, 168, 223, 236, 100, 101, 216, 195, 240, 155, },
            };

            result = Transform.Rotate90Degrees(table14);
            if (!IsSameArray(expected14, result))
            {
                return false;
            }

            int[,] table15 =
            {
                { 203, 128, 89, 132, 217, 46, 146, 233, 54, 50, 86, 181, 169, 207, 11, },
                { 136, 10, 67, 210, 76, 170, 151, 69, 188, 120, 79, 243, 155, 232, 216, },
                { 177, 98, 142, 82, 72, 230, 12, 21, 85, 104, 224, 18, 57, 75, 37, },
                { 29, 223, 204, 91, 147, 51, 127, 94, 159, 125, 27, 80, 206, 51, 230, },
                { 54, 98, 195, 145, 202, 47, 124, 101, 93, 48, 58, 140, 216, 205, 197, },
                { 227, 29, 10, 58, 86, 237, 132, 228, 247, 112, 217, 220, 184, 115, 226, },
                { 187, 171, 117, 59, 179, 108, 18, 234, 22, 199, 38, 30, 241, 93, 123, },
                { 210, 220, 250, 167, 51, 76, 132, 176, 67, 62, 135, 149, 34, 31, 125, },
                { 142, 239, 233, 25, 209, 76, 81, 85, 53, 250, 77, 151, 52, 170, 171, },
                { 165, 201, 167, 246, 17, 26, 173, 46, 204, 231, 101, 202, 107, 114, 180, },
                { 250, 41, 154, 49, 235, 13, 174, 29, 165, 250, 187, 106, 245, 254, 181, },
                { 156, 126, 25, 107, 156, 186, 242, 60, 233, 199, 111, 207, 49, 154, 162, },
                { 85, 108, 224, 159, 13, 126, 147, 130, 31, 89, 168, 93, 133, 57, 90, },
                { 89, 116, 193, 191, 24, 114, 58, 228, 49, 254, 122, 195, 52, 201, 225, },
                { 204, 215, 104, 145, 132, 61, 17, 228, 16, 110, 89, 178, 19, 28, 162, },
                { 43, 253, 166, 119, 254, 114, 236, 23, 111, 110, 41, 216, 64, 126, 107, },
                { 246, 110, 71, 45, 42, 229, 147, 26, 184, 62, 19, 97, 249, 254, 22, },
                { 117, 117, 188, 190, 47, 38, 135, 74, 208, 82, 17, 96, 105, 35, 118, },
                { 253, 107, 23, 89, 251, 75, 66, 35, 27, 140, 230, 179, 68, 115, 176, },
                { 13, 144, 91, 101, 245, 207, 84, 106, 162, 159, 164, 17, 66, 202, 69, },
            };

            int[,] expected15 =
            {
                { 13, 253, 117, 246, 43, 204, 89, 85, 156, 250, 165, 142, 210, 187, 227, 54, 29, 177, 136, 203, },
                { 144, 107, 117, 110, 253, 215, 116, 108, 126, 41, 201, 239, 220, 171, 29, 98, 223, 98, 10, 128, },
                { 91, 23, 188, 71, 166, 104, 193, 224, 25, 154, 167, 233, 250, 117, 10, 195, 204, 142, 67, 89, },
                { 101, 89, 190, 45, 119, 145, 191, 159, 107, 49, 246, 25, 167, 59, 58, 145, 91, 82, 210, 132, },
                { 245, 251, 47, 42, 254, 132, 24, 13, 156, 235, 17, 209, 51, 179, 86, 202, 147, 72, 76, 217, },
                { 207, 75, 38, 229, 114, 61, 114, 126, 186, 13, 26, 76, 76, 108, 237, 47, 51, 230, 170, 46, },
                { 84, 66, 135, 147, 236, 17, 58, 147, 242, 174, 173, 81, 132, 18, 132, 124, 127, 12, 151, 146, },
                { 106, 35, 74, 26, 23, 228, 228, 130, 60, 29, 46, 85, 176, 234, 228, 101, 94, 21, 69, 233, },
                { 162, 27, 208, 184, 111, 16, 49, 31, 233, 165, 204, 53, 67, 22, 247, 93, 159, 85, 188, 54, },
                { 159, 140, 82, 62, 110, 110, 254, 89, 199, 250, 231, 250, 62, 199, 112, 48, 125, 104, 120, 50, },
                { 164, 230, 17, 19, 41, 89, 122, 168, 111, 187, 101, 77, 135, 38, 217, 58, 27, 224, 79, 86, },
                { 17, 179, 96, 97, 216, 178, 195, 93, 207, 106, 202, 151, 149, 30, 220, 140, 80, 18, 243, 181, },
                { 66, 68, 105, 249, 64, 19, 52, 133, 49, 245, 107, 52, 34, 241, 184, 216, 206, 57, 155, 169, },
                { 202, 115, 35, 254, 126, 28, 201, 57, 154, 254, 114, 170, 31, 93, 115, 205, 51, 75, 232, 207, },
                { 69, 176, 118, 22, 107, 162, 225, 90, 162, 181, 180, 171, 125, 123, 226, 197, 230, 37, 216, 11, },
            };

            result = Transform.Rotate90Degrees(table15);
            if (!IsSameArray(expected15, result))
            {
                return false;
            }

            return true;
        }

        private static bool B00()
        {
            const EMode TRANSFORM_TYPE = EMode.HorizontalMirror;
            int[,] onlyOne = { { 3 } };

            Transform.TransformArray(onlyOne, TRANSFORM_TYPE);
            if (onlyOne.GetLength(0) != 1
                || onlyOne.GetLength(1) != 1
                || onlyOne[0, 0] != 3)
            {
                return false;
            }

            onlyOne[0, 0] = 7;

            Transform.TransformArray(onlyOne, TRANSFORM_TYPE);
            if (onlyOne.GetLength(0) != 1
                || onlyOne.GetLength(1) != 1
                || onlyOne[0, 0] != 7)
            {
                return false;
            }

            onlyOne[0, 0] = 9;

            Transform.TransformArray(onlyOne, TRANSFORM_TYPE);
            if (onlyOne.GetLength(0) != 1
                || onlyOne.GetLength(1) != 1
                || onlyOne[0, 0] != 9)
            {
                return false;
            }

            return true;
        }

        private static bool B01()
        {
            const EMode TRANSFORM_TYPE = EMode.HorizontalMirror;

            int[,] table1 =
            {
                { 76, 161, 84, 236, 76, 19, 237, 101, 128, 134, 69, },
            };

            int[,] expected1 =
            {
                { 69, 134, 128, 101, 237, 19, 76, 236, 84, 161, 76, },
            };

            Transform.TransformArray(table1, TRANSFORM_TYPE);
            if (!IsSameArray(expected1, table1))
            {
                return false;
            }

            int[,] table2 =
            {
                { 98, 46, 204, 246, 162, 150, 244, 64, 171, 150, 114, 224, 124, 204, 47, },
            };

            int[,] expected2 =
            {
                { 47, 204, 124, 224, 114, 150, 171, 64, 244, 150, 162, 246, 204, 46, 98, },
            };

            Transform.TransformArray(table2, TRANSFORM_TYPE);
            if (!IsSameArray(expected2, table2))
            {
                return false;
            }

            int[,] table3 =
            {
                { 241, 166, 16, 107, 94, 127, 179, 57, 79, 150, 100, 136, 12, 128, 13, 30, 239, 83, 19, 153, },
            };

            int[,] expected3 =
            {
                { 153, 19, 83, 239, 30, 13, 128, 12, 136, 100, 150, 79, 57, 179, 127, 94, 107, 16, 166, 241, },
            };

            Transform.TransformArray(table3, TRANSFORM_TYPE);
            if (!IsSameArray(expected3, table3))
            {
                return false;
            }

            return true;
        }

        private static bool B02()
        {
            const EMode TRANSFORM_TYPE = EMode.HorizontalMirror;
            int[,] table4 =
            {
                { 125, },
                { 73, },
                { 158, },
                { 122, },
                { 232, },
                { 91, },
                { 240, },
                { 213, },
                { 109, },
                { 145, },
                { 239, },
            };

            int[,] expected4 =
            {
                { 125, },
                { 73, },
                { 158, },
                { 122, },
                { 232, },
                { 91, },
                { 240, },
                { 213, },
                { 109, },
                { 145, },
                { 239, },
            };

            Transform.TransformArray(table4, TRANSFORM_TYPE);
            if (!IsSameArray(expected4, table4))
            { 
                return false; 
            }

            int[,] table5 =
            {
                { 197, },
                { 88, },
                { 145, },
                { 167, },
                { 114, },
                { 130, },
                { 168, },
                { 40, },
                { 230, },
                { 253, },
                { 186, },
                { 105, },
                { 25, },
                { 128, },
                { 58, },
            };

            int[,] expected5 =
            {
                { 197, },
                { 88, },
                { 145, },
                { 167, },
                { 114, },
                { 130, },
                { 168, },
                { 40, },
                { 230, },
                { 253, },
                { 186, },
                { 105, },
                { 25, },
                { 128, },
                { 58, },
            };

            Transform.TransformArray(table5, TRANSFORM_TYPE);
            if (!IsSameArray(expected5, table5))
            {
                return false;
            }

            int[,] table6 =
            {
                { 57, },
                { 158, },
                { 90, },
                { 64, },
                { 19, },
                { 20, },
                { 159, },
                { 35, },
                { 66, },
                { 197, },
                { 147, },
                { 91, },
                { 72, },
                { 119, },
                { 57, },
                { 208, },
                { 38, },
                { 174, },
                { 27, },
                { 71, },
            };

            int[,] expected6 =
            {
                { 57, },
                { 158, },
                { 90, },
                { 64, },
                { 19, },
                { 20, },
                { 159, },
                { 35, },
                { 66, },
                { 197, },
                { 147, },
                { 91, },
                { 72, },
                { 119, },
                { 57, },
                { 208, },
                { 38, },
                { 174, },
                { 27, },
                { 71, },
            };

            Transform.TransformArray(table6, TRANSFORM_TYPE);
            if (!IsSameArray(expected6, table6))
            {
                return false;
            }
            return true;
        }

        private static bool B03()
        {
            const EMode TRANSFORM_TYPE = EMode.HorizontalMirror;

            int[,] table7 =
            {
                { 131, 141, 165, 209, 188, 233, 41, 188, 16, 121, 11, },
                { 95, 184, 133, 126, 33, 29, 197, 112, 173, 78, 166, },
                { 30, 79, 232, 207, 167, 158, 53, 22, 134, 115, 225, },
                { 52, 40, 234, 146, 198, 95, 211, 27, 80, 135, 215, },
                { 166, 149, 61, 188, 254, 29, 123, 178, 210, 44, 72, },
                { 243, 82, 47, 59, 134, 183, 28, 211, 242, 212, 188, },
                { 64, 220, 239, 191, 144, 217, 196, 169, 17, 46, 252, },
                { 182, 22, 152, 189, 217, 145, 195, 210, 48, 48, 212, },
                { 45, 167, 244, 90, 148, 228, 43, 10, 240, 179, 26, },
                { 210, 195, 66, 140, 151, 70, 201, 194, 151, 27, 225, },
                { 86, 179, 104, 149, 41, 154, 31, 76, 247, 120, 250, },
            };

            int[,] expected7 =
            {
                { 11, 121, 16, 188, 41, 233, 188, 209, 165, 141, 131, },
                { 166, 78, 173, 112, 197, 29, 33, 126, 133, 184, 95, },
                { 225, 115, 134, 22, 53, 158, 167, 207, 232, 79, 30, },
                { 215, 135, 80, 27, 211, 95, 198, 146, 234, 40, 52, },
                { 72, 44, 210, 178, 123, 29, 254, 188, 61, 149, 166, },
                { 188, 212, 242, 211, 28, 183, 134, 59, 47, 82, 243, },
                { 252, 46, 17, 169, 196, 217, 144, 191, 239, 220, 64, },
                { 212, 48, 48, 210, 195, 145, 217, 189, 152, 22, 182, },
                { 26, 179, 240, 10, 43, 228, 148, 90, 244, 167, 45, },
                { 225, 27, 151, 194, 201, 70, 151, 140, 66, 195, 210, },
                { 250, 120, 247, 76, 31, 154, 41, 149, 104, 179, 86, },
            };

            Transform.TransformArray(table7, TRANSFORM_TYPE);
            if (!IsSameArray(expected7, table7))
            {
                return false;
            }

            int[,] table8 =
            {
                { 48, 52, 123, 46, 111, 156, 24, 133, 137, 229, 168, 117, 202, 246, 169, },
                { 63, 34, 30, 242, 136, 155, 253, 62, 219, 119, 85, 73, 101, 25, 233, },
                { 203, 217, 13, 237, 190, 11, 115, 137, 105, 16, 92, 70, 110, 149, 213, },
                { 239, 34, 201, 214, 110, 141, 209, 83, 131, 236, 106, 146, 209, 111, 250, },
                { 197, 98, 118, 162, 30, 63, 249, 112, 19, 13, 32, 190, 172, 72, 94, },
                { 238, 100, 183, 27, 169, 42, 169, 247, 241, 139, 20, 192, 32, 100, 155, },
                { 160, 74, 251, 114, 64, 161, 142, 173, 189, 53, 32, 145, 13, 192, 51, },
                { 128, 250, 166, 137, 168, 75, 221, 234, 157, 135, 77, 252, 23, 252, 127, },
                { 76, 31, 254, 211, 241, 194, 63, 152, 122, 250, 143, 199, 75, 141, 166, },
                { 28, 105, 140, 144, 241, 44, 115, 89, 237, 176, 171, 73, 245, 66, 111, },
                { 112, 244, 163, 21, 94, 246, 81, 84, 133, 122, 32, 118, 16, 83, 34, },
                { 16, 107, 195, 214, 214, 167, 100, 48, 229, 53, 57, 234, 72, 92, 14, },
                { 14, 95, 118, 107, 159, 17, 40, 249, 103, 184, 171, 247, 248, 84, 239, },
                { 132, 193, 140, 36, 225, 208, 156, 142, 192, 166, 174, 163, 136, 207, 161, },
                { 27, 95, 21, 168, 128, 48, 43, 85, 235, 219, 88, 84, 42, 145, 129, },
            };

            int[,] expected8 =
            {
                { 169, 246, 202, 117, 168, 229, 137, 133, 24, 156, 111, 46, 123, 52, 48, },
                { 233, 25, 101, 73, 85, 119, 219, 62, 253, 155, 136, 242, 30, 34, 63, },
                { 213, 149, 110, 70, 92, 16, 105, 137, 115, 11, 190, 237, 13, 217, 203, },
                { 250, 111, 209, 146, 106, 236, 131, 83, 209, 141, 110, 214, 201, 34, 239, },
                { 94, 72, 172, 190, 32, 13, 19, 112, 249, 63, 30, 162, 118, 98, 197, },
                { 155, 100, 32, 192, 20, 139, 241, 247, 169, 42, 169, 27, 183, 100, 238, },
                { 51, 192, 13, 145, 32, 53, 189, 173, 142, 161, 64, 114, 251, 74, 160, },
                { 127, 252, 23, 252, 77, 135, 157, 234, 221, 75, 168, 137, 166, 250, 128, },
                { 166, 141, 75, 199, 143, 250, 122, 152, 63, 194, 241, 211, 254, 31, 76, },
                { 111, 66, 245, 73, 171, 176, 237, 89, 115, 44, 241, 144, 140, 105, 28, },
                { 34, 83, 16, 118, 32, 122, 133, 84, 81, 246, 94, 21, 163, 244, 112, },
                { 14, 92, 72, 234, 57, 53, 229, 48, 100, 167, 214, 214, 195, 107, 16, },
                { 239, 84, 248, 247, 171, 184, 103, 249, 40, 17, 159, 107, 118, 95, 14, },
                { 161, 207, 136, 163, 174, 166, 192, 142, 156, 208, 225, 36, 140, 193, 132, },
                { 129, 145, 42, 84, 88, 219, 235, 85, 43, 48, 128, 168, 21, 95, 27, },
            };

            Transform.TransformArray(table8, TRANSFORM_TYPE);
            if (!IsSameArray(expected8, table8))
            {
                return false;
            }

            int[,] table9 =
            {
                { 117, 165, 175, 84, 52, 147, 85, 10, 150, 26, 31, 11, 171, 58, 72, 24, 116, 105, 113, 168, },
                { 10, 156, 141, 204, 216, 204, 133, 208, 32, 101, 160, 181, 243, 210, 186, 147, 185, 35, 98, 32, },
                { 58, 147, 87, 243, 232, 77, 247, 175, 135, 195, 66, 202, 241, 251, 247, 92, 31, 126, 251, 183, },
                { 55, 147, 30, 141, 120, 20, 21, 153, 92, 104, 30, 127, 103, 164, 37, 21, 51, 185, 215, 89, },
                { 198, 119, 152, 166, 206, 151, 240, 23, 40, 27, 182, 64, 142, 96, 104, 65, 109, 208, 253, 151, },
                { 190, 230, 204, 180, 251, 58, 33, 19, 196, 29, 216, 206, 180, 36, 162, 53, 16, 118, 12, 91, },
                { 99, 144, 37, 46, 162, 173, 68, 107, 232, 44, 157, 222, 210, 15, 151, 106, 66, 167, 50, 83, },
                { 87, 250, 135, 134, 79, 23, 177, 23, 207, 163, 132, 176, 119, 107, 237, 166, 129, 35, 53, 13, },
                { 103, 167, 198, 11, 249, 95, 177, 105, 29, 45, 229, 196, 166, 204, 201, 98, 239, 83, 197, 236, },
                { 52, 211, 208, 34, 158, 221, 178, 129, 51, 235, 14, 18, 152, 79, 168, 21, 77, 134, 154, 18, },
                { 50, 144, 21, 213, 170, 52, 48, 11, 227, 21, 204, 60, 212, 204, 63, 115, 249, 242, 60, 128, },
                { 68, 148, 247, 213, 117, 120, 63, 103, 136, 209, 157, 196, 105, 20, 123, 33, 116, 47, 100, 52, },
                { 117, 171, 130, 61, 129, 243, 13, 42, 43, 34, 51, 38, 30, 237, 105, 67, 54, 210, 190, 68, },
                { 68, 102, 102, 185, 53, 248, 93, 155, 191, 14, 160, 244, 75, 126, 71, 245, 23, 171, 158, 195, },
                { 96, 201, 73, 46, 102, 208, 92, 72, 112, 91, 169, 99, 206, 66, 32, 83, 115, 46, 163, 162, },
                { 240, 243, 53, 109, 111, 19, 154, 114, 128, 142, 123, 175, 232, 123, 85, 252, 149, 108, 229, 117, },
                { 165, 101, 186, 114, 85, 15, 84, 87, 69, 253, 201, 221, 154, 58, 207, 145, 205, 215, 198, 93, },
                { 103, 36, 87, 174, 204, 52, 14, 16, 161, 104, 223, 156, 188, 152, 211, 202, 82, 79, 46, 145, },
                { 15, 179, 55, 138, 205, 64, 164, 84, 228, 73, 92, 193, 186, 181, 211, 44, 143, 30, 152, 163, },
                { 188, 154, 235, 26, 23, 123, 159, 176, 236, 186, 88, 242, 78, 38, 143, 83, 76, 124, 224, 25, },
            };

            int[,] expected9 =
            {
                { 168, 113, 105, 116, 24, 72, 58, 171, 11, 31, 26, 150, 10, 85, 147, 52, 84, 175, 165, 117, },
                { 32, 98, 35, 185, 147, 186, 210, 243, 181, 160, 101, 32, 208, 133, 204, 216, 204, 141, 156, 10, },
                { 183, 251, 126, 31, 92, 247, 251, 241, 202, 66, 195, 135, 175, 247, 77, 232, 243, 87, 147, 58, },
                { 89, 215, 185, 51, 21, 37, 164, 103, 127, 30, 104, 92, 153, 21, 20, 120, 141, 30, 147, 55, },
                { 151, 253, 208, 109, 65, 104, 96, 142, 64, 182, 27, 40, 23, 240, 151, 206, 166, 152, 119, 198, },
                { 91, 12, 118, 16, 53, 162, 36, 180, 206, 216, 29, 196, 19, 33, 58, 251, 180, 204, 230, 190, },
                { 83, 50, 167, 66, 106, 151, 15, 210, 222, 157, 44, 232, 107, 68, 173, 162, 46, 37, 144, 99, },
                { 13, 53, 35, 129, 166, 237, 107, 119, 176, 132, 163, 207, 23, 177, 23, 79, 134, 135, 250, 87, },
                { 236, 197, 83, 239, 98, 201, 204, 166, 196, 229, 45, 29, 105, 177, 95, 249, 11, 198, 167, 103, },
                { 18, 154, 134, 77, 21, 168, 79, 152, 18, 14, 235, 51, 129, 178, 221, 158, 34, 208, 211, 52, },
                { 128, 60, 242, 249, 115, 63, 204, 212, 60, 204, 21, 227, 11, 48, 52, 170, 213, 21, 144, 50, },
                { 52, 100, 47, 116, 33, 123, 20, 105, 196, 157, 209, 136, 103, 63, 120, 117, 213, 247, 148, 68, },
                { 68, 190, 210, 54, 67, 105, 237, 30, 38, 51, 34, 43, 42, 13, 243, 129, 61, 130, 171, 117, },
                { 195, 158, 171, 23, 245, 71, 126, 75, 244, 160, 14, 191, 155, 93, 248, 53, 185, 102, 102, 68, },
                { 162, 163, 46, 115, 83, 32, 66, 206, 99, 169, 91, 112, 72, 92, 208, 102, 46, 73, 201, 96, },
                { 117, 229, 108, 149, 252, 85, 123, 232, 175, 123, 142, 128, 114, 154, 19, 111, 109, 53, 243, 240, },
                { 93, 198, 215, 205, 145, 207, 58, 154, 221, 201, 253, 69, 87, 84, 15, 85, 114, 186, 101, 165, },
                { 145, 46, 79, 82, 202, 211, 152, 188, 156, 223, 104, 161, 16, 14, 52, 204, 174, 87, 36, 103, },
                { 163, 152, 30, 143, 44, 211, 181, 186, 193, 92, 73, 228, 84, 164, 64, 205, 138, 55, 179, 15, },
                { 25, 224, 124, 76, 83, 143, 38, 78, 242, 88, 186, 236, 176, 159, 123, 23, 26, 235, 154, 188, },
            };

            Transform.TransformArray(table9, TRANSFORM_TYPE);
            if (!IsSameArray(expected9, table9))
            {
                return false;
            }

            return true;
        }

        private static bool B04()
        {
            const EMode TRANSFORM_TYPE = EMode.HorizontalMirror;

            int[,] table10 =
            {
                { 97, 63, 120, 49, 166, 176, 216, 56, 168, 208, 233, },
                { 62, 223, 185, 201, 146, 109, 136, 246, 193, 93, 127, },
                { 216, 28, 244, 253, 197, 15, 17, 204, 122, 253, 93, },
                { 226, 92, 253, 120, 22, 197, 154, 195, 161, 237, 51, },
                { 17, 212, 129, 215, 98, 247, 211, 226, 110, 99, 77, },
                { 240, 107, 153, 153, 208, 192, 102, 159, 180, 58, 216, },
                { 65, 210, 111, 168, 22, 152, 37, 254, 252, 60, 211, },
            };

            int[,] expected10 =
            {
                { 233, 208, 168, 56, 216, 176, 166, 49, 120, 63, 97, },
                { 127, 93, 193, 246, 136, 109, 146, 201, 185, 223, 62, },
                { 93, 253, 122, 204, 17, 15, 197, 253, 244, 28, 216, },
                { 51, 237, 161, 195, 154, 197, 22, 120, 253, 92, 226, },
                { 77, 99, 110, 226, 211, 247, 98, 215, 129, 212, 17, },
                { 216, 58, 180, 159, 102, 192, 208, 153, 153, 107, 240, },
                { 211, 60, 252, 254, 37, 152, 22, 168, 111, 210, 65, },
            };

            Transform.TransformArray(table10, TRANSFORM_TYPE);
            if (!IsSameArray(expected10, table10))
            {
                return false;
            }

            int[,] table11 =
            {
                { 57, 135, 57, 239, 145, 128, 65, 170, 11, 106, 86, 192, 88, 214, 46, },
                { 226, 144, 118, 242, 91, 174, 24, 72, 65, 51, 93, 27, 131, 177, 132, },
                { 59, 233, 186, 205, 181, 146, 63, 172, 65, 227, 180, 185, 54, 216, 82, },
                { 99, 166, 91, 47, 136, 94, 124, 14, 187, 12, 246, 25, 14, 26, 34, },
                { 172, 145, 188, 73, 182, 89, 243, 134, 44, 162, 190, 92, 39, 117, 45, },
                { 52, 140, 190, 161, 157, 220, 158, 175, 81, 90, 97, 67, 146, 94, 12, },
                { 252, 69, 129, 206, 48, 247, 70, 127, 186, 11, 166, 178, 114, 155, 89, },
                { 203, 207, 213, 165, 180, 163, 160, 224, 169, 205, 92, 101, 207, 238, 60, },
                { 246, 179, 216, 198, 236, 205, 93, 113, 147, 142, 73, 166, 79, 68, 13, },
                { 41, 137, 53, 195, 66, 180, 58, 158, 65, 196, 85, 145, 237, 42, 155, },
                { 220, 56, 224, 64, 157, 23, 203, 98, 175, 207, 198, 48, 37, 163, 206, },
            };

            int[,] expected11 =
            {
                { 46, 214, 88, 192, 86, 106, 11, 170, 65, 128, 145, 239, 57, 135, 57, },
                { 132, 177, 131, 27, 93, 51, 65, 72, 24, 174, 91, 242, 118, 144, 226, },
                { 82, 216, 54, 185, 180, 227, 65, 172, 63, 146, 181, 205, 186, 233, 59, },
                { 34, 26, 14, 25, 246, 12, 187, 14, 124, 94, 136, 47, 91, 166, 99, },
                { 45, 117, 39, 92, 190, 162, 44, 134, 243, 89, 182, 73, 188, 145, 172, },
                { 12, 94, 146, 67, 97, 90, 81, 175, 158, 220, 157, 161, 190, 140, 52, },
                { 89, 155, 114, 178, 166, 11, 186, 127, 70, 247, 48, 206, 129, 69, 252, },
                { 60, 238, 207, 101, 92, 205, 169, 224, 160, 163, 180, 165, 213, 207, 203, },
                { 13, 68, 79, 166, 73, 142, 147, 113, 93, 205, 236, 198, 216, 179, 246, },
                { 155, 42, 237, 145, 85, 196, 65, 158, 58, 180, 66, 195, 53, 137, 41, },
                { 206, 163, 37, 48, 198, 207, 175, 98, 203, 23, 157, 64, 224, 56, 220, },
            };

            Transform.TransformArray(table11, TRANSFORM_TYPE);
            if (!IsSameArray(expected11, table11))
            {
                return false;
            }

            int[,] table12 =
            {
                { 172, 66, 233, 232, 181, 202, 170, 102, 162, 14, 21, 29, 183, 111, 209, 48, 124, 204, 54, 227, },
                { 91, 205, 116, 147, 202, 96, 233, 119, 61, 226, 109, 151, 87, 161, 129, 245, 113, 240, 168, 198, },
                { 145, 37, 223, 238, 150, 222, 180, 124, 230, 51, 190, 67, 78, 128, 150, 148, 53, 23, 149, 201, },
                { 150, 254, 107, 123, 144, 195, 174, 112, 140, 95, 20, 194, 17, 249, 39, 35, 20, 120, 136, 32, },
                { 80, 83, 33, 140, 195, 75, 37, 133, 209, 112, 95, 230, 170, 83, 225, 234, 232, 239, 47, 12, },
                { 143, 131, 181, 23, 98, 13, 223, 110, 192, 64, 118, 150, 19, 206, 198, 249, 186, 124, 198, 100, },
                { 131, 131, 51, 205, 173, 65, 198, 204, 225, 85, 79, 25, 111, 154, 142, 132, 199, 91, 60, 235, },
                { 142, 191, 169, 65, 26, 132, 162, 69, 226, 32, 187, 36, 154, 53, 79, 49, 26, 13, 225, 14, },
                { 41, 102, 204, 93, 31, 63, 97, 27, 107, 251, 156, 105, 131, 79, 198, 123, 243, 139, 39, 61, },
                { 54, 59, 165, 29, 130, 237, 225, 130, 182, 16, 243, 182, 45, 163, 82, 227, 72, 178, 67, 245, },
                { 216, 154, 73, 118, 152, 229, 224, 184, 217, 213, 68, 200, 229, 127, 96, 201, 163, 193, 61, 57, },
                { 85, 234, 161, 131, 73, 116, 13, 65, 12, 134, 40, 111, 192, 75, 213, 83, 105, 104, 34, 44, },
                { 42, 45, 101, 132, 62, 30, 101, 84, 191, 177, 35, 67, 78, 167, 160, 43, 208, 126, 195, 214, },
                { 24, 16, 81, 225, 35, 14, 160, 225, 131, 77, 107, 244, 79, 149, 244, 61, 61, 155, 134, 153, },
                { 197, 181, 175, 91, 231, 90, 79, 159, 47, 110, 68, 193, 250, 223, 136, 180, 48, 197, 82, 209, },
            };

            int[,] expected12 =
            {
                { 227, 54, 204, 124, 48, 209, 111, 183, 29, 21, 14, 162, 102, 170, 202, 181, 232, 233, 66, 172, },
                { 198, 168, 240, 113, 245, 129, 161, 87, 151, 109, 226, 61, 119, 233, 96, 202, 147, 116, 205, 91, },
                { 201, 149, 23, 53, 148, 150, 128, 78, 67, 190, 51, 230, 124, 180, 222, 150, 238, 223, 37, 145, },
                { 32, 136, 120, 20, 35, 39, 249, 17, 194, 20, 95, 140, 112, 174, 195, 144, 123, 107, 254, 150, },
                { 12, 47, 239, 232, 234, 225, 83, 170, 230, 95, 112, 209, 133, 37, 75, 195, 140, 33, 83, 80, },
                { 100, 198, 124, 186, 249, 198, 206, 19, 150, 118, 64, 192, 110, 223, 13, 98, 23, 181, 131, 143, },
                { 235, 60, 91, 199, 132, 142, 154, 111, 25, 79, 85, 225, 204, 198, 65, 173, 205, 51, 131, 131, },
                { 14, 225, 13, 26, 49, 79, 53, 154, 36, 187, 32, 226, 69, 162, 132, 26, 65, 169, 191, 142, },
                { 61, 39, 139, 243, 123, 198, 79, 131, 105, 156, 251, 107, 27, 97, 63, 31, 93, 204, 102, 41, },
                { 245, 67, 178, 72, 227, 82, 163, 45, 182, 243, 16, 182, 130, 225, 237, 130, 29, 165, 59, 54, },
                { 57, 61, 193, 163, 201, 96, 127, 229, 200, 68, 213, 217, 184, 224, 229, 152, 118, 73, 154, 216, },
                { 44, 34, 104, 105, 83, 213, 75, 192, 111, 40, 134, 12, 65, 13, 116, 73, 131, 161, 234, 85, },
                { 214, 195, 126, 208, 43, 160, 167, 78, 67, 35, 177, 191, 84, 101, 30, 62, 132, 101, 45, 42, },
                { 153, 134, 155, 61, 61, 244, 149, 79, 244, 107, 77, 131, 225, 160, 14, 35, 225, 81, 16, 24, },
                { 209, 82, 197, 48, 180, 136, 223, 250, 193, 68, 110, 47, 159, 79, 90, 231, 91, 175, 181, 197, },
            };

            Transform.TransformArray(table12, TRANSFORM_TYPE);
            if (!IsSameArray(expected12, table12))
            {
                return false;
            }

            return true;
        }

        private static bool B05()
        {
            const EMode TRANSFORM_TYPE = EMode.HorizontalMirror;

            int[,] table13 =
            {
                { 180, 75, 126, 83, 184, 39, 46, },
                { 85, 135, 109, 94, 231, 228, 88, },
                { 198, 246, 119, 86, 138, 91, 112, },
                { 216, 234, 53, 108, 96, 78, 99, },
                { 206, 154, 14, 202, 167, 84, 200, },
                { 42, 205, 180, 94, 15, 219, 177, },
                { 105, 168, 229, 176, 44, 27, 222, },
                { 71, 160, 212, 81, 243, 221, 204, },
                { 75, 93, 138, 212, 234, 116, 139, },
                { 27, 148, 205, 42, 68, 230, 26, },
                { 178, 56, 152, 198, 226, 186, 108, },
            };

            int[,] expected13 =
            {
                { 46, 39, 184, 83, 126, 75, 180, },
                { 88, 228, 231, 94, 109, 135, 85, },
                { 112, 91, 138, 86, 119, 246, 198, },
                { 99, 78, 96, 108, 53, 234, 216, },
                { 200, 84, 167, 202, 14, 154, 206, },
                { 177, 219, 15, 94, 180, 205, 42, },
                { 222, 27, 44, 176, 229, 168, 105, },
                { 204, 221, 243, 81, 212, 160, 71, },
                { 139, 116, 234, 212, 138, 93, 75, },
                { 26, 230, 68, 42, 205, 148, 27, },
                { 108, 186, 226, 198, 152, 56, 178, },
            };

            Transform.TransformArray(table13, TRANSFORM_TYPE);
            if (!IsSameArray(expected13, table13))
            {
                return false;
            }

            int[,] table14 =
            {
                { 31, 177, 70, 171, 240, 95, 139, 127, 166, 108, 52, },
                { 207, 204, 245, 116, 101, 204, 233, 147, 131, 26, 233, },
                { 106, 159, 38, 205, 51, 139, 238, 196, 185, 12, 64, },
                { 64, 215, 210, 250, 179, 230, 122, 154, 51, 67, 203, },
                { 135, 100, 208, 10, 137, 109, 131, 158, 17, 196, 186, },
                { 165, 14, 121, 238, 215, 165, 122, 77, 54, 244, 127, },
                { 193, 71, 185, 135, 203, 215, 87, 181, 58, 229, 150, },
                { 247, 163, 103, 241, 89, 56, 127, 166, 193, 56, 114, },
                { 139, 105, 87, 118, 225, 91, 194, 198, 155, 185, 196, },
                { 47, 60, 241, 238, 69, 243, 220, 12, 69, 225, 165, },
                { 173, 124, 180, 244, 212, 203, 128, 67, 81, 10, 141, },
                { 121, 143, 172, 189, 27, 74, 77, 30, 156, 104, 202, },
                { 97, 169, 73, 230, 166, 175, 83, 59, 27, 131, 229, },
                { 221, 252, 170, 109, 166, 144, 92, 175, 29, 83, 111, },
                { 100, 237, 233, 127, 174, 231, 127, 176, 157, 222, 100, },
            };

            int[,] expected14 =
            {
                { 52, 108, 166, 127, 139, 95, 240, 171, 70, 177, 31, },
                { 233, 26, 131, 147, 233, 204, 101, 116, 245, 204, 207, },
                { 64, 12, 185, 196, 238, 139, 51, 205, 38, 159, 106, },
                { 203, 67, 51, 154, 122, 230, 179, 250, 210, 215, 64, },
                { 186, 196, 17, 158, 131, 109, 137, 10, 208, 100, 135, },
                { 127, 244, 54, 77, 122, 165, 215, 238, 121, 14, 165, },
                { 150, 229, 58, 181, 87, 215, 203, 135, 185, 71, 193, },
                { 114, 56, 193, 166, 127, 56, 89, 241, 103, 163, 247, },
                { 196, 185, 155, 198, 194, 91, 225, 118, 87, 105, 139, },
                { 165, 225, 69, 12, 220, 243, 69, 238, 241, 60, 47, },
                { 141, 10, 81, 67, 128, 203, 212, 244, 180, 124, 173, },
                { 202, 104, 156, 30, 77, 74, 27, 189, 172, 143, 121, },
                { 229, 131, 27, 59, 83, 175, 166, 230, 73, 169, 97, },
                { 111, 83, 29, 175, 92, 144, 166, 109, 170, 252, 221, },
                { 100, 222, 157, 176, 127, 231, 174, 127, 233, 237, 100, },
            };

            Transform.TransformArray(table14, TRANSFORM_TYPE);
            if (!IsSameArray(expected14, table14))
            {
                return false;
            }

            int[,] table15 =
            {
                { 67, 250, 104, 56, 51, 10, 72, 198, 80, 241, 192, 121, 193, 46, 181, },
                { 253, 144, 69, 98, 194, 168, 206, 46, 182, 56, 232, 88, 202, 219, 68, },
                { 113, 79, 55, 80, 192, 187, 209, 89, 81, 145, 227, 47, 214, 194, 124, },
                { 41, 119, 109, 75, 224, 143, 101, 95, 52, 176, 130, 125, 200, 167, 201, },
                { 59, 213, 129, 244, 221, 208, 14, 223, 61, 104, 120, 121, 227, 253, 83, },
                { 28, 65, 68, 93, 154, 19, 38, 162, 76, 58, 96, 17, 160, 101, 244, },
                { 131, 26, 53, 253, 147, 68, 129, 204, 160, 123, 47, 12, 153, 85, 97, },
                { 198, 157, 236, 26, 130, 152, 86, 163, 186, 102, 21, 66, 110, 44, 43, },
                { 86, 188, 242, 96, 92, 196, 252, 202, 229, 85, 231, 43, 11, 67, 160, },
                { 131, 25, 229, 178, 139, 249, 53, 109, 231, 140, 229, 214, 145, 80, 44, },
                { 229, 102, 58, 128, 69, 12, 238, 218, 141, 249, 131, 18, 204, 187, 103, },
                { 36, 199, 115, 85, 252, 162, 28, 108, 68, 249, 94, 114, 88, 206, 58, },
                { 247, 211, 14, 109, 190, 18, 127, 130, 111, 127, 145, 33, 123, 144, 28, },
                { 172, 243, 108, 248, 44, 216, 33, 217, 108, 124, 122, 93, 68, 249, 137, },
                { 205, 145, 227, 126, 130, 179, 90, 112, 174, 139, 46, 186, 16, 114, 152, },
                { 179, 252, 117, 218, 100, 63, 205, 56, 57, 208, 119, 217, 252, 207, 148, },
                { 180, 219, 23, 136, 130, 123, 213, 102, 30, 220, 209, 132, 183, 199, 77, },
                { 168, 82, 113, 69, 72, 230, 232, 105, 58, 166, 20, 158, 184, 180, 129, },
                { 139, 231, 224, 39, 33, 228, 33, 190, 130, 31, 199, 36, 157, 81, 150, },
                { 109, 71, 50, 146, 200, 23, 29, 235, 146, 234, 106, 75, 68, 252, 208, },
            };

            int[,] expected15 =
            {
                { 181, 46, 193, 121, 192, 241, 80, 198, 72, 10, 51, 56, 104, 250, 67, },
                { 68, 219, 202, 88, 232, 56, 182, 46, 206, 168, 194, 98, 69, 144, 253, },
                { 124, 194, 214, 47, 227, 145, 81, 89, 209, 187, 192, 80, 55, 79, 113, },
                { 201, 167, 200, 125, 130, 176, 52, 95, 101, 143, 224, 75, 109, 119, 41, },
                { 83, 253, 227, 121, 120, 104, 61, 223, 14, 208, 221, 244, 129, 213, 59, },
                { 244, 101, 160, 17, 96, 58, 76, 162, 38, 19, 154, 93, 68, 65, 28, },
                { 97, 85, 153, 12, 47, 123, 160, 204, 129, 68, 147, 253, 53, 26, 131, },
                { 43, 44, 110, 66, 21, 102, 186, 163, 86, 152, 130, 26, 236, 157, 198, },
                { 160, 67, 11, 43, 231, 85, 229, 202, 252, 196, 92, 96, 242, 188, 86, },
                { 44, 80, 145, 214, 229, 140, 231, 109, 53, 249, 139, 178, 229, 25, 131, },
                { 103, 187, 204, 18, 131, 249, 141, 218, 238, 12, 69, 128, 58, 102, 229, },
                { 58, 206, 88, 114, 94, 249, 68, 108, 28, 162, 252, 85, 115, 199, 36, },
                { 28, 144, 123, 33, 145, 127, 111, 130, 127, 18, 190, 109, 14, 211, 247, },
                { 137, 249, 68, 93, 122, 124, 108, 217, 33, 216, 44, 248, 108, 243, 172, },
                { 152, 114, 16, 186, 46, 139, 174, 112, 90, 179, 130, 126, 227, 145, 205, },
                { 148, 207, 252, 217, 119, 208, 57, 56, 205, 63, 100, 218, 117, 252, 179, },
                { 77, 199, 183, 132, 209, 220, 30, 102, 213, 123, 130, 136, 23, 219, 180, },
                { 129, 180, 184, 158, 20, 166, 58, 105, 232, 230, 72, 69, 113, 82, 168, },
                { 150, 81, 157, 36, 199, 31, 130, 190, 33, 228, 33, 39, 224, 231, 139, },
                { 208, 252, 68, 75, 106, 234, 146, 235, 29, 23, 200, 146, 50, 71, 109, },
            };

            Transform.TransformArray(table15, TRANSFORM_TYPE);
            if (!IsSameArray(expected15, table15))
            {
                return false;
            }

            return true;
        }

        private static bool C00()
        {
            const EMode TRANSFORM_TYPE = EMode.VerticalMirror;
            int[,] onlyOne = { { 3 } };

            Transform.TransformArray(onlyOne, TRANSFORM_TYPE);
            if (onlyOne.GetLength(0) != 1
                || onlyOne.GetLength(1) != 1
                || onlyOne[0, 0] != 3)
            {
                return false;
            }

            onlyOne[0, 0] = 7;

            Transform.TransformArray(onlyOne, TRANSFORM_TYPE);
            if (onlyOne.GetLength(0) != 1
                || onlyOne.GetLength(1) != 1
                || onlyOne[0, 0] != 7)
            {
                return false;
            }

            onlyOne[0, 0] = 9;

            Transform.TransformArray(onlyOne, TRANSFORM_TYPE);
            if (onlyOne.GetLength(0) != 1
                || onlyOne.GetLength(1) != 1
                || onlyOne[0, 0] != 9)
            {
                return false;
            }

            return true;
        }

        private static bool C01()
        {
            const EMode TRANSFORM_TYPE = EMode.VerticalMirror;

            int[,] table1 =
            {
                { 168, 189, 253, 226, 101, 149, 104, 41, 68, 130, 213, },
            };

            int[,] expected1 =
            {
                { 168, 189, 253, 226, 101, 149, 104, 41, 68, 130, 213, },
            };

            Transform.TransformArray(table1, TRANSFORM_TYPE);
            if (!IsSameArray(expected1, table1))
            {
                return false;
            }

            int[,] table2 =
            {
                { 157, 209, 20, 44, 70, 215, 231, 54, 126, 195, 46, 12, 107, 171, 73, },
            };

            int[,] expected2 =
            {
                { 157, 209, 20, 44, 70, 215, 231, 54, 126, 195, 46, 12, 107, 171, 73, },
            };

            Transform.TransformArray(table2, TRANSFORM_TYPE);
            if (!IsSameArray(expected2, table2))
            {
                return false;
            }

            int[,] table3 =
            {
                { 66, 126, 56, 38, 248, 144, 155, 78, 210, 172, 176, 169, 244, 173, 110, 205, 48, 95, 160, 28, },
            };

            int[,] expected3 =
            {
                { 66, 126, 56, 38, 248, 144, 155, 78, 210, 172, 176, 169, 244, 173, 110, 205, 48, 95, 160, 28, },
            };

            Transform.TransformArray(table3, TRANSFORM_TYPE);
            if (!IsSameArray(expected3, table3))
            {
                return false;
            }

            return true;
        }

        private static bool C02()
        {
            const EMode TRANSFORM_TYPE = EMode.VerticalMirror;

            int[,] table4 =
            {
                { 172, },
                { 253, },
                { 57, },
                { 226, },
                { 117, },
                { 137, },
                { 133, },
                { 56, },
                { 188, },
                { 55, },
                { 69, },
            };

            int[,] expected4 =
            {
                { 69, },
                { 55, },
                { 188, },
                { 56, },
                { 133, },
                { 137, },
                { 117, },
                { 226, },
                { 57, },
                { 253, },
                { 172, },
            };

            Transform.TransformArray(table4, TRANSFORM_TYPE);
            if (!IsSameArray(expected4, table4))
            {
                return false;
            }

            int[,] table5 =
            {
                { 47, },
                { 171, },
                { 123, },
                { 143, },
                { 207, },
                { 251, },
                { 157, },
                { 237, },
                { 136, },
                { 248, },
                { 179, },
                { 246, },
                { 177, },
                { 236, },
                { 201, },
            };

            int[,] expected5 =
            {
                { 201, },
                { 236, },
                { 177, },
                { 246, },
                { 179, },
                { 248, },
                { 136, },
                { 237, },
                { 157, },
                { 251, },
                { 207, },
                { 143, },
                { 123, },
                { 171, },
                { 47, },
            };

            Transform.TransformArray(table5, TRANSFORM_TYPE);
            if (!IsSameArray(expected5, table5))
            {
                return false;
            }

            int[,] table6 =
            {
                { 141, },
                { 64, },
                { 74, },
                { 223, },
                { 94, },
                { 216, },
                { 105, },
                { 178, },
                { 88, },
                { 73, },
                { 198, },
                { 82, },
                { 187, },
                { 245, },
                { 204, },
                { 112, },
                { 167, },
                { 158, },
                { 25, },
                { 108, },
            };

            int[,] expected6 =
            {
                { 108, },
                { 25, },
                { 158, },
                { 167, },
                { 112, },
                { 204, },
                { 245, },
                { 187, },
                { 82, },
                { 198, },
                { 73, },
                { 88, },
                { 178, },
                { 105, },
                { 216, },
                { 94, },
                { 223, },
                { 74, },
                { 64, },
                { 141, },
            };

            Transform.TransformArray(table6, TRANSFORM_TYPE);
            if (!IsSameArray(expected6, table6))
            {
                return false;
            }

            return true;
        }

        private static bool C03()
        {
            const EMode TRANSFORM_TYPE = EMode.VerticalMirror;

            int[,] table7 =
            {
                { 98, 219, 11, 221, 11, 77, 29, 81, 100, 191, 86, },
                { 101, 58, 252, 239, 77, 150, 139, 154, 131, 119, 192, },
                { 46, 240, 196, 161, 188, 217, 109, 195, 92, 174, 249, },
                { 90, 52, 176, 105, 50, 33, 117, 91, 45, 99, 178, },
                { 93, 195, 93, 27, 117, 135, 126, 206, 87, 71, 154, },
                { 31, 55, 143, 81, 76, 216, 89, 89, 44, 60, 78, },
                { 28, 213, 216, 90, 246, 207, 109, 137, 120, 121, 125, },
                { 91, 160, 76, 221, 14, 188, 58, 153, 17, 101, 89, },
                { 138, 206, 177, 36, 247, 84, 169, 220, 189, 222, 24, },
                { 73, 173, 120, 225, 153, 74, 134, 206, 192, 137, 58, },
                { 183, 185, 204, 26, 71, 198, 110, 143, 254, 77, 192, },
            };

            int[,] expected7 =
            {
                { 183, 185, 204, 26, 71, 198, 110, 143, 254, 77, 192, },
                { 73, 173, 120, 225, 153, 74, 134, 206, 192, 137, 58, },
                { 138, 206, 177, 36, 247, 84, 169, 220, 189, 222, 24, },
                { 91, 160, 76, 221, 14, 188, 58, 153, 17, 101, 89, },
                { 28, 213, 216, 90, 246, 207, 109, 137, 120, 121, 125, },
                { 31, 55, 143, 81, 76, 216, 89, 89, 44, 60, 78, },
                { 93, 195, 93, 27, 117, 135, 126, 206, 87, 71, 154, },
                { 90, 52, 176, 105, 50, 33, 117, 91, 45, 99, 178, },
                { 46, 240, 196, 161, 188, 217, 109, 195, 92, 174, 249, },
                { 101, 58, 252, 239, 77, 150, 139, 154, 131, 119, 192, },
                { 98, 219, 11, 221, 11, 77, 29, 81, 100, 191, 86, },
            };

            Transform.TransformArray(table7, TRANSFORM_TYPE);
            if (!IsSameArray(expected7, table7))
            {
                return false;
            }

            int[,] table8 =
            {
                { 240, 230, 253, 204, 184, 30, 91, 15, 158, 96, 77, 164, 165, 231, 136, },
                { 170, 42, 82, 180, 33, 45, 55, 86, 226, 122, 15, 81, 160, 51, 253, },
                { 115, 110, 251, 64, 86, 178, 237, 251, 193, 110, 194, 105, 103, 37, 247, },
                { 22, 23, 248, 65, 107, 156, 67, 41, 86, 159, 154, 86, 98, 11, 235, },
                { 118, 100, 123, 147, 83, 46, 203, 85, 244, 244, 99, 56, 136, 72, 14, },
                { 23, 67, 222, 127, 38, 248, 241, 251, 210, 236, 213, 65, 165, 158, 130, },
                { 253, 96, 231, 201, 121, 39, 76, 142, 173, 121, 203, 104, 47, 82, 208, },
                { 232, 121, 246, 217, 117, 161, 229, 33, 209, 193, 194, 241, 217, 155, 250, },
                { 212, 130, 137, 227, 198, 127, 100, 225, 24, 182, 86, 166, 226, 148, 90, },
                { 104, 58, 208, 45, 230, 15, 134, 26, 221, 244, 165, 141, 204, 207, 220, },
                { 224, 149, 210, 126, 193, 79, 52, 106, 69, 85, 160, 154, 22, 213, 203, },
                { 48, 94, 195, 243, 215, 182, 168, 107, 86, 220, 44, 53, 42, 125, 205, },
                { 101, 124, 98, 96, 147, 95, 200, 165, 135, 143, 17, 181, 167, 250, 72, },
                { 38, 73, 173, 34, 18, 207, 170, 27, 137, 77, 81, 123, 253, 203, 12, },
                { 16, 157, 100, 225, 127, 79, 225, 235, 186, 13, 25, 222, 200, 253, 192, },
            };

            int[,] expected8 =
            {
                { 16, 157, 100, 225, 127, 79, 225, 235, 186, 13, 25, 222, 200, 253, 192, },
                { 38, 73, 173, 34, 18, 207, 170, 27, 137, 77, 81, 123, 253, 203, 12, },
                { 101, 124, 98, 96, 147, 95, 200, 165, 135, 143, 17, 181, 167, 250, 72, },
                { 48, 94, 195, 243, 215, 182, 168, 107, 86, 220, 44, 53, 42, 125, 205, },
                { 224, 149, 210, 126, 193, 79, 52, 106, 69, 85, 160, 154, 22, 213, 203, },
                { 104, 58, 208, 45, 230, 15, 134, 26, 221, 244, 165, 141, 204, 207, 220, },
                { 212, 130, 137, 227, 198, 127, 100, 225, 24, 182, 86, 166, 226, 148, 90, },
                { 232, 121, 246, 217, 117, 161, 229, 33, 209, 193, 194, 241, 217, 155, 250, },
                { 253, 96, 231, 201, 121, 39, 76, 142, 173, 121, 203, 104, 47, 82, 208, },
                { 23, 67, 222, 127, 38, 248, 241, 251, 210, 236, 213, 65, 165, 158, 130, },
                { 118, 100, 123, 147, 83, 46, 203, 85, 244, 244, 99, 56, 136, 72, 14, },
                { 22, 23, 248, 65, 107, 156, 67, 41, 86, 159, 154, 86, 98, 11, 235, },
                { 115, 110, 251, 64, 86, 178, 237, 251, 193, 110, 194, 105, 103, 37, 247, },
                { 170, 42, 82, 180, 33, 45, 55, 86, 226, 122, 15, 81, 160, 51, 253, },
                { 240, 230, 253, 204, 184, 30, 91, 15, 158, 96, 77, 164, 165, 231, 136, },
            };

            Transform.TransformArray(table8, TRANSFORM_TYPE);
            if (!IsSameArray(expected8, table8))
            {
                return false;
            }

            int[,] table9 =
            {
                { 13, 141, 141, 140, 64, 63, 87, 202, 226, 166, 42, 190, 26, 221, 106, 70, 15, 56, 69, 233, },
                { 246, 74, 18, 144, 114, 20, 210, 152, 55, 112, 86, 190, 254, 186, 113, 76, 235, 142, 225, 238, },
                { 73, 196, 95, 110, 26, 42, 250, 157, 176, 131, 246, 227, 217, 211, 46, 109, 48, 153, 171, 143, },
                { 90, 71, 61, 246, 49, 26, 75, 35, 98, 35, 232, 175, 103, 69, 95, 136, 155, 112, 109, 228, },
                { 189, 208, 85, 143, 201, 107, 51, 112, 18, 178, 23, 131, 168, 101, 70, 141, 85, 112, 112, 35, },
                { 45, 140, 92, 89, 20, 125, 244, 191, 15, 76, 115, 162, 88, 98, 73, 21, 109, 212, 128, 242, },
                { 160, 217, 190, 221, 58, 55, 12, 67, 49, 211, 95, 28, 114, 243, 187, 112, 51, 168, 167, 86, },
                { 89, 145, 156, 68, 234, 212, 36, 63, 242, 180, 156, 30, 244, 207, 74, 113, 245, 48, 228, 15, },
                { 79, 29, 95, 50, 233, 142, 11, 245, 224, 214, 33, 104, 125, 131, 84, 20, 114, 39, 254, 161, },
                { 251, 182, 32, 189, 59, 156, 31, 132, 221, 19, 142, 142, 172, 207, 30, 85, 166, 155, 43, 60, },
                { 242, 202, 12, 144, 73, 188, 115, 141, 152, 209, 184, 171, 229, 23, 139, 37, 26, 44, 59, 59, },
                { 66, 211, 113, 120, 125, 91, 54, 147, 243, 50, 90, 94, 13, 81, 146, 245, 189, 132, 47, 30, },
                { 38, 91, 76, 23, 122, 156, 197, 215, 232, 79, 69, 210, 140, 129, 57, 132, 164, 15, 220, 208, },
                { 135, 206, 127, 250, 47, 177, 231, 50, 164, 162, 219, 185, 130, 119, 35, 177, 127, 253, 168, 117, },
                { 142, 195, 52, 186, 200, 235, 25, 109, 114, 154, 160, 195, 228, 113, 163, 246, 111, 54, 225, 44, },
                { 207, 39, 205, 149, 70, 179, 17, 148, 161, 172, 247, 155, 64, 54, 70, 218, 234, 162, 14, 250, },
                { 95, 176, 117, 208, 122, 84, 101, 37, 189, 112, 155, 162, 35, 61, 78, 202, 153, 22, 133, 13, },
                { 28, 60, 198, 196, 238, 119, 46, 38, 146, 14, 81, 136, 38, 221, 25, 158, 219, 32, 158, 177, },
                { 155, 194, 181, 111, 148, 199, 154, 225, 37, 190, 81, 118, 46, 125, 178, 150, 103, 169, 166, 94, },
                { 183, 75, 41, 28, 254, 11, 46, 211, 178, 25, 177, 186, 207, 103, 39, 179, 21, 60, 240, 194, },
            };

            int[,] expected9 =
            {
                { 183, 75, 41, 28, 254, 11, 46, 211, 178, 25, 177, 186, 207, 103, 39, 179, 21, 60, 240, 194, },
                { 155, 194, 181, 111, 148, 199, 154, 225, 37, 190, 81, 118, 46, 125, 178, 150, 103, 169, 166, 94, },
                { 28, 60, 198, 196, 238, 119, 46, 38, 146, 14, 81, 136, 38, 221, 25, 158, 219, 32, 158, 177, },
                { 95, 176, 117, 208, 122, 84, 101, 37, 189, 112, 155, 162, 35, 61, 78, 202, 153, 22, 133, 13, },
                { 207, 39, 205, 149, 70, 179, 17, 148, 161, 172, 247, 155, 64, 54, 70, 218, 234, 162, 14, 250, },
                { 142, 195, 52, 186, 200, 235, 25, 109, 114, 154, 160, 195, 228, 113, 163, 246, 111, 54, 225, 44, },
                { 135, 206, 127, 250, 47, 177, 231, 50, 164, 162, 219, 185, 130, 119, 35, 177, 127, 253, 168, 117, },
                { 38, 91, 76, 23, 122, 156, 197, 215, 232, 79, 69, 210, 140, 129, 57, 132, 164, 15, 220, 208, },
                { 66, 211, 113, 120, 125, 91, 54, 147, 243, 50, 90, 94, 13, 81, 146, 245, 189, 132, 47, 30, },
                { 242, 202, 12, 144, 73, 188, 115, 141, 152, 209, 184, 171, 229, 23, 139, 37, 26, 44, 59, 59, },
                { 251, 182, 32, 189, 59, 156, 31, 132, 221, 19, 142, 142, 172, 207, 30, 85, 166, 155, 43, 60, },
                { 79, 29, 95, 50, 233, 142, 11, 245, 224, 214, 33, 104, 125, 131, 84, 20, 114, 39, 254, 161, },
                { 89, 145, 156, 68, 234, 212, 36, 63, 242, 180, 156, 30, 244, 207, 74, 113, 245, 48, 228, 15, },
                { 160, 217, 190, 221, 58, 55, 12, 67, 49, 211, 95, 28, 114, 243, 187, 112, 51, 168, 167, 86, },
                { 45, 140, 92, 89, 20, 125, 244, 191, 15, 76, 115, 162, 88, 98, 73, 21, 109, 212, 128, 242, },
                { 189, 208, 85, 143, 201, 107, 51, 112, 18, 178, 23, 131, 168, 101, 70, 141, 85, 112, 112, 35, },
                { 90, 71, 61, 246, 49, 26, 75, 35, 98, 35, 232, 175, 103, 69, 95, 136, 155, 112, 109, 228, },
                { 73, 196, 95, 110, 26, 42, 250, 157, 176, 131, 246, 227, 217, 211, 46, 109, 48, 153, 171, 143, },
                { 246, 74, 18, 144, 114, 20, 210, 152, 55, 112, 86, 190, 254, 186, 113, 76, 235, 142, 225, 238, },
                { 13, 141, 141, 140, 64, 63, 87, 202, 226, 166, 42, 190, 26, 221, 106, 70, 15, 56, 69, 233, },
            };

            Transform.TransformArray(table9, TRANSFORM_TYPE);
            if (!IsSameArray(expected9, table9))
            {
                return false;
            }

            return true;
        }

        private static bool C04()
        {
            const EMode TRANSFORM_TYPE = EMode.VerticalMirror;

            int[,] table10 =
            {
                { 167, 60, 15, 136, 86, 59, 18, 118, 107, 88, 47, },
                { 168, 76, 248, 105, 189, 19, 22, 30, 91, 142, 102, },
                { 145, 35, 25, 210, 191, 184, 131, 59, 121, 188, 243, },
                { 176, 185, 58, 62, 212, 240, 106, 232, 229, 33, 23, },
                { 135, 141, 253, 253, 102, 206, 243, 32, 228, 173, 122, },
                { 197, 246, 24, 36, 95, 139, 131, 104, 45, 140, 22, },
                { 65, 35, 219, 51, 215, 125, 129, 133, 97, 118, 46, },
            };

            int[,] expected10 =
            {
                { 65, 35, 219, 51, 215, 125, 129, 133, 97, 118, 46, },
                { 197, 246, 24, 36, 95, 139, 131, 104, 45, 140, 22, },
                { 135, 141, 253, 253, 102, 206, 243, 32, 228, 173, 122, },
                { 176, 185, 58, 62, 212, 240, 106, 232, 229, 33, 23, },
                { 145, 35, 25, 210, 191, 184, 131, 59, 121, 188, 243, },
                { 168, 76, 248, 105, 189, 19, 22, 30, 91, 142, 102, },
                { 167, 60, 15, 136, 86, 59, 18, 118, 107, 88, 47, },
            };

            Transform.TransformArray(table10, TRANSFORM_TYPE);
            if (!IsSameArray(expected10, table10))
            {
                return false;
            }

            int[,] table11 =
            {
                { 126, 227, 197, 165, 179, 83, 45, 253, 48, 59, 234, 143, 104, 130, 179, },
                { 14, 20, 55, 240, 249, 117, 83, 21, 235, 44, 98, 178, 235, 213, 145, },
                { 127, 59, 204, 69, 111, 56, 248, 28, 142, 56, 201, 12, 59, 222, 97, },
                { 249, 241, 197, 125, 10, 71, 30, 71, 53, 41, 77, 20, 35, 228, 168, },
                { 38, 196, 62, 151, 85, 248, 31, 185, 79, 175, 89, 143, 181, 14, 189, },
                { 235, 25, 235, 243, 181, 64, 117, 140, 100, 90, 54, 100, 242, 173, 107, },
                { 88, 40, 178, 223, 77, 168, 148, 200, 98, 135, 116, 103, 211, 235, 30, },
                { 41, 251, 219, 125, 39, 72, 119, 198, 175, 142, 247, 171, 185, 69, 176, },
                { 133, 40, 209, 13, 248, 157, 240, 35, 30, 250, 13, 20, 178, 14, 143, },
                { 14, 159, 91, 37, 120, 126, 119, 228, 53, 174, 13, 248, 196, 189, 59, },
                { 88, 84, 42, 10, 215, 70, 167, 23, 178, 84, 199, 118, 106, 186, 93, },
            };

            int[,] expected11 =
            {
                { 88, 84, 42, 10, 215, 70, 167, 23, 178, 84, 199, 118, 106, 186, 93, },
                { 14, 159, 91, 37, 120, 126, 119, 228, 53, 174, 13, 248, 196, 189, 59, },
                { 133, 40, 209, 13, 248, 157, 240, 35, 30, 250, 13, 20, 178, 14, 143, },
                { 41, 251, 219, 125, 39, 72, 119, 198, 175, 142, 247, 171, 185, 69, 176, },
                { 88, 40, 178, 223, 77, 168, 148, 200, 98, 135, 116, 103, 211, 235, 30, },
                { 235, 25, 235, 243, 181, 64, 117, 140, 100, 90, 54, 100, 242, 173, 107, },
                { 38, 196, 62, 151, 85, 248, 31, 185, 79, 175, 89, 143, 181, 14, 189, },
                { 249, 241, 197, 125, 10, 71, 30, 71, 53, 41, 77, 20, 35, 228, 168, },
                { 127, 59, 204, 69, 111, 56, 248, 28, 142, 56, 201, 12, 59, 222, 97, },
                { 14, 20, 55, 240, 249, 117, 83, 21, 235, 44, 98, 178, 235, 213, 145, },
                { 126, 227, 197, 165, 179, 83, 45, 253, 48, 59, 234, 143, 104, 130, 179, },
            };

            Transform.TransformArray(table11, TRANSFORM_TYPE);
            if (!IsSameArray(expected11, table11))
            {
                return false;
            }

            int[,] table12 =
            {
                { 107, 175, 46, 178, 23, 53, 101, 131, 181, 129, 167, 220, 34, 24, 225, 115, 87, 46, 132, 138, },
                { 203, 139, 200, 139, 55, 174, 248, 147, 147, 138, 113, 169, 19, 25, 155, 245, 211, 110, 38, 84, },
                { 226, 104, 227, 18, 214, 221, 77, 25, 224, 47, 200, 230, 67, 33, 105, 140, 212, 101, 80, 161, },
                { 54, 234, 117, 212, 127, 112, 46, 89, 51, 240, 242, 36, 146, 175, 228, 65, 46, 147, 153, 218, },
                { 65, 88, 121, 87, 208, 24, 235, 235, 178, 173, 60, 227, 76, 124, 56, 103, 23, 101, 216, 252, },
                { 22, 186, 169, 27, 99, 76, 150, 141, 248, 25, 244, 10, 87, 218, 176, 189, 83, 247, 163, 154, },
                { 134, 111, 49, 229, 99, 244, 239, 223, 119, 207, 213, 251, 170, 128, 12, 137, 193, 20, 239, 123, },
                { 158, 162, 180, 130, 135, 199, 69, 82, 87, 156, 197, 161, 35, 173, 124, 147, 172, 232, 66, 28, },
                { 22, 112, 19, 80, 207, 86, 27, 181, 131, 92, 245, 43, 223, 211, 49, 31, 136, 112, 94, 88, },
                { 171, 69, 210, 31, 13, 214, 247, 26, 109, 134, 227, 121, 197, 137, 116, 77, 23, 244, 149, 235, },
                { 116, 198, 143, 37, 170, 30, 244, 88, 143, 90, 68, 57, 35, 98, 182, 168, 57, 14, 193, 46, },
                { 204, 141, 16, 234, 100, 23, 103, 122, 82, 156, 218, 56, 101, 249, 170, 217, 142, 210, 33, 185, },
                { 36, 32, 66, 104, 58, 169, 160, 212, 254, 117, 199, 203, 63, 153, 83, 43, 13, 148, 179, 21, },
                { 105, 136, 207, 160, 150, 79, 206, 36, 50, 47, 149, 169, 235, 214, 234, 122, 223, 209, 113, 235, },
                { 232, 145, 96, 15, 128, 210, 51, 50, 163, 246, 106, 12, 45, 49, 197, 187, 103, 151, 139, 87, },
            };

            int[,] expected12 =
            {
                { 232, 145, 96, 15, 128, 210, 51, 50, 163, 246, 106, 12, 45, 49, 197, 187, 103, 151, 139, 87, },
                { 105, 136, 207, 160, 150, 79, 206, 36, 50, 47, 149, 169, 235, 214, 234, 122, 223, 209, 113, 235, },
                { 36, 32, 66, 104, 58, 169, 160, 212, 254, 117, 199, 203, 63, 153, 83, 43, 13, 148, 179, 21, },
                { 204, 141, 16, 234, 100, 23, 103, 122, 82, 156, 218, 56, 101, 249, 170, 217, 142, 210, 33, 185, },
                { 116, 198, 143, 37, 170, 30, 244, 88, 143, 90, 68, 57, 35, 98, 182, 168, 57, 14, 193, 46, },
                { 171, 69, 210, 31, 13, 214, 247, 26, 109, 134, 227, 121, 197, 137, 116, 77, 23, 244, 149, 235, },
                { 22, 112, 19, 80, 207, 86, 27, 181, 131, 92, 245, 43, 223, 211, 49, 31, 136, 112, 94, 88, },
                { 158, 162, 180, 130, 135, 199, 69, 82, 87, 156, 197, 161, 35, 173, 124, 147, 172, 232, 66, 28, },
                { 134, 111, 49, 229, 99, 244, 239, 223, 119, 207, 213, 251, 170, 128, 12, 137, 193, 20, 239, 123, },
                { 22, 186, 169, 27, 99, 76, 150, 141, 248, 25, 244, 10, 87, 218, 176, 189, 83, 247, 163, 154, },
                { 65, 88, 121, 87, 208, 24, 235, 235, 178, 173, 60, 227, 76, 124, 56, 103, 23, 101, 216, 252, },
                { 54, 234, 117, 212, 127, 112, 46, 89, 51, 240, 242, 36, 146, 175, 228, 65, 46, 147, 153, 218, },
                { 226, 104, 227, 18, 214, 221, 77, 25, 224, 47, 200, 230, 67, 33, 105, 140, 212, 101, 80, 161, },
                { 203, 139, 200, 139, 55, 174, 248, 147, 147, 138, 113, 169, 19, 25, 155, 245, 211, 110, 38, 84, },
                { 107, 175, 46, 178, 23, 53, 101, 131, 181, 129, 167, 220, 34, 24, 225, 115, 87, 46, 132, 138, },
            };

            Transform.TransformArray(table12, TRANSFORM_TYPE);
            if (!IsSameArray(expected12, table12))
            {
                return false;
            }

            return true;
        }

        private static bool C05()
        {
            const EMode TRANSFORM_TYPE = EMode.VerticalMirror;

            int[,] table13 =
            {
                { 203, 69, 78, 226, 224, 38, 50, },
                { 156, 174, 199, 176, 157, 199, 192, },
                { 230, 120, 42, 246, 13, 186, 172, },
                { 234, 164, 238, 46, 178, 150, 232, },
                { 202, 76, 66, 232, 189, 188, 247, },
                { 162, 81, 96, 48, 190, 206, 126, },
                { 32, 51, 216, 177, 242, 67, 238, },
                { 42, 49, 166, 168, 23, 18, 172, },
                { 72, 145, 157, 55, 217, 148, 44, },
                { 105, 156, 96, 65, 19, 12, 79, },
                { 22, 122, 105, 187, 248, 129, 159, },
            };

            int[,] expected13 =
            {
                { 22, 122, 105, 187, 248, 129, 159, },
                { 105, 156, 96, 65, 19, 12, 79, },
                { 72, 145, 157, 55, 217, 148, 44, },
                { 42, 49, 166, 168, 23, 18, 172, },
                { 32, 51, 216, 177, 242, 67, 238, },
                { 162, 81, 96, 48, 190, 206, 126, },
                { 202, 76, 66, 232, 189, 188, 247, },
                { 234, 164, 238, 46, 178, 150, 232, },
                { 230, 120, 42, 246, 13, 186, 172, },
                { 156, 174, 199, 176, 157, 199, 192, },
                { 203, 69, 78, 226, 224, 38, 50, },
            };

            Transform.TransformArray(table13, TRANSFORM_TYPE);
            if (!IsSameArray(expected13, table13))
            {
                return false;
            }

            int[,] table14 =
            {
                { 83, 146, 239, 208, 83, 106, 216, 198, 241, 22, 150, },
                { 236, 242, 223, 158, 94, 189, 235, 160, 20, 37, 75, },
                { 236, 80, 193, 193, 172, 99, 250, 26, 238, 133, 116, },
                { 137, 213, 228, 54, 153, 77, 198, 240, 206, 112, 63, },
                { 24, 162, 97, 33, 32, 62, 150, 235, 229, 143, 145, },
                { 32, 132, 119, 115, 251, 148, 103, 25, 123, 41, 87, },
                { 15, 251, 96, 41, 26, 152, 139, 244, 171, 158, 27, },
                { 156, 179, 97, 232, 222, 11, 26, 97, 60, 137, 248, },
                { 175, 66, 208, 120, 14, 152, 235, 43, 139, 35, 118, },
                { 201, 172, 92, 172, 10, 91, 220, 36, 217, 14, 27, },
                { 157, 102, 114, 81, 251, 190, 32, 190, 50, 166, 193, },
                { 199, 149, 84, 81, 107, 171, 14, 71, 203, 180, 176, },
                { 136, 66, 128, 215, 79, 190, 152, 191, 76, 77, 42, },
                { 41, 125, 241, 249, 80, 250, 184, 225, 78, 91, 195, },
                { 86, 172, 23, 199, 95, 211, 246, 43, 195, 123, 167, },
            };

            int[,] expected14 =
            {
                { 86, 172, 23, 199, 95, 211, 246, 43, 195, 123, 167, },
                { 41, 125, 241, 249, 80, 250, 184, 225, 78, 91, 195, },
                { 136, 66, 128, 215, 79, 190, 152, 191, 76, 77, 42, },
                { 199, 149, 84, 81, 107, 171, 14, 71, 203, 180, 176, },
                { 157, 102, 114, 81, 251, 190, 32, 190, 50, 166, 193, },
                { 201, 172, 92, 172, 10, 91, 220, 36, 217, 14, 27, },
                { 175, 66, 208, 120, 14, 152, 235, 43, 139, 35, 118, },
                { 156, 179, 97, 232, 222, 11, 26, 97, 60, 137, 248, },
                { 15, 251, 96, 41, 26, 152, 139, 244, 171, 158, 27, },
                { 32, 132, 119, 115, 251, 148, 103, 25, 123, 41, 87, },
                { 24, 162, 97, 33, 32, 62, 150, 235, 229, 143, 145, },
                { 137, 213, 228, 54, 153, 77, 198, 240, 206, 112, 63, },
                { 236, 80, 193, 193, 172, 99, 250, 26, 238, 133, 116, },
                { 236, 242, 223, 158, 94, 189, 235, 160, 20, 37, 75, },
                { 83, 146, 239, 208, 83, 106, 216, 198, 241, 22, 150, },
            };

            Transform.TransformArray(table14, TRANSFORM_TYPE);
            if (!IsSameArray(expected14, table14))
            {
                return false;
            }

            int[,] table15 =
            {
                { 109, 53, 27, 241, 181, 245, 24, 127, 101, 97, 26, 77, 245, 51, 214, },
                { 26, 190, 95, 149, 118, 114, 167, 85, 198, 174, 215, 102, 67, 109, 93, },
                { 248, 128, 28, 245, 162, 125, 200, 51, 80, 223, 226, 252, 136, 82, 215, },
                { 241, 59, 197, 248, 208, 240, 85, 246, 239, 196, 211, 203, 223, 156, 40, },
                { 139, 249, 157, 143, 47, 170, 115, 190, 129, 68, 37, 65, 37, 40, 114, },
                { 108, 91, 141, 208, 88, 122, 103, 244, 95, 42, 119, 102, 12, 145, 44, },
                { 252, 17, 106, 97, 137, 157, 48, 67, 21, 18, 214, 222, 230, 38, 67, },
                { 150, 200, 106, 145, 172, 77, 149, 66, 219, 241, 61, 79, 179, 108, 73, },
                { 89, 218, 209, 215, 27, 205, 189, 12, 80, 10, 164, 60, 35, 69, 162, },
                { 113, 176, 79, 164, 136, 51, 80, 95, 126, 26, 45, 149, 108, 93, 223, },
                { 174, 216, 91, 207, 188, 198, 157, 28, 184, 32, 246, 126, 20, 33, 37, },
                { 192, 157, 88, 115, 111, 115, 66, 161, 248, 145, 68, 65, 252, 77, 236, },
                { 93, 123, 38, 185, 130, 115, 11, 156, 231, 114, 20, 67, 78, 61, 204, },
                { 250, 207, 41, 135, 67, 140, 92, 233, 97, 49, 196, 184, 205, 166, 159, },
                { 240, 236, 101, 53, 194, 251, 82, 232, 217, 221, 138, 217, 161, 44, 32, },
                { 49, 154, 152, 44, 57, 28, 124, 75, 234, 36, 49, 29, 167, 72, 90, },
                { 148, 249, 54, 83, 122, 201, 70, 108, 155, 158, 218, 51, 59, 52, 69, },
                { 241, 93, 124, 95, 180, 84, 146, 24, 32, 200, 192, 220, 83, 72, 242, },
                { 160, 88, 77, 237, 34, 143, 60, 162, 93, 77, 123, 46, 141, 210, 205, },
                { 168, 251, 119, 95, 131, 140, 230, 188, 63, 71, 176, 224, 121, 20, 158, },
            };

            int[,] expected15 =
            {
                { 168, 251, 119, 95, 131, 140, 230, 188, 63, 71, 176, 224, 121, 20, 158, },
                { 160, 88, 77, 237, 34, 143, 60, 162, 93, 77, 123, 46, 141, 210, 205, },
                { 241, 93, 124, 95, 180, 84, 146, 24, 32, 200, 192, 220, 83, 72, 242, },
                { 148, 249, 54, 83, 122, 201, 70, 108, 155, 158, 218, 51, 59, 52, 69, },
                { 49, 154, 152, 44, 57, 28, 124, 75, 234, 36, 49, 29, 167, 72, 90, },
                { 240, 236, 101, 53, 194, 251, 82, 232, 217, 221, 138, 217, 161, 44, 32, },
                { 250, 207, 41, 135, 67, 140, 92, 233, 97, 49, 196, 184, 205, 166, 159, },
                { 93, 123, 38, 185, 130, 115, 11, 156, 231, 114, 20, 67, 78, 61, 204, },
                { 192, 157, 88, 115, 111, 115, 66, 161, 248, 145, 68, 65, 252, 77, 236, },
                { 174, 216, 91, 207, 188, 198, 157, 28, 184, 32, 246, 126, 20, 33, 37, },
                { 113, 176, 79, 164, 136, 51, 80, 95, 126, 26, 45, 149, 108, 93, 223, },
                { 89, 218, 209, 215, 27, 205, 189, 12, 80, 10, 164, 60, 35, 69, 162, },
                { 150, 200, 106, 145, 172, 77, 149, 66, 219, 241, 61, 79, 179, 108, 73, },
                { 252, 17, 106, 97, 137, 157, 48, 67, 21, 18, 214, 222, 230, 38, 67, },
                { 108, 91, 141, 208, 88, 122, 103, 244, 95, 42, 119, 102, 12, 145, 44, },
                { 139, 249, 157, 143, 47, 170, 115, 190, 129, 68, 37, 65, 37, 40, 114, },
                { 241, 59, 197, 248, 208, 240, 85, 246, 239, 196, 211, 203, 223, 156, 40, },
                { 248, 128, 28, 245, 162, 125, 200, 51, 80, 223, 226, 252, 136, 82, 215, },
                { 26, 190, 95, 149, 118, 114, 167, 85, 198, 174, 215, 102, 67, 109, 93, },
                { 109, 53, 27, 241, 181, 245, 24, 127, 101, 97, 26, 77, 245, 51, 214, },
            };

            Transform.TransformArray(table15, TRANSFORM_TYPE);
            if (!IsSameArray(expected15, table15))
            {
                return false;
            }

            return true;
        }

        private static bool D00()
        {
            const EMode TRANSFORM_TYPE = EMode.DiagonalShift;
            int[,] onlyOne = { { 3 } };

            Transform.TransformArray(onlyOne, TRANSFORM_TYPE);
            if (onlyOne.GetLength(0) != 1
                || onlyOne.GetLength(1) != 1
                || onlyOne[0, 0] != 3)
            {
                return false;
            }

            onlyOne[0, 0] = 7;

            Transform.TransformArray(onlyOne, TRANSFORM_TYPE);
            if (onlyOne.GetLength(0) != 1
                || onlyOne.GetLength(1) != 1
                || onlyOne[0, 0] != 7)
            {
                return false;
            }

            onlyOne[0, 0] = 9;

            Transform.TransformArray(onlyOne, TRANSFORM_TYPE);
            if (onlyOne.GetLength(0) != 1
                || onlyOne.GetLength(1) != 1
                || onlyOne[0, 0] != 9)
            {
                return false;
            }

            return true;
        }

        private static bool D01()
        {
            const EMode TRANSFORM_TYPE = EMode.DiagonalShift;

            int[,] table1 =
            {
                { 168, 152, 250, 130, 37, 174, 180, 240, 217, 65, 242, },
            };

            int[,] expected1 =
            {
                { 242, 168, 152, 250, 130, 37, 174, 180, 240, 217, 65, },
            };

            Transform.TransformArray(table1, TRANSFORM_TYPE);
            if (!IsSameArray(table1, expected1))
            {
                return false;
            }

            int[,] table2 =
            {
                { 230, 77, 131, 46, 68, 36, 164, 15, 99, 225, 58, 139, 131, 198, 19, },
            };

            int[,] expected2 =
            {
                { 19, 230, 77, 131, 46, 68, 36, 164, 15, 99, 225, 58, 139, 131, 198, },
            };

            Transform.TransformArray(table2, TRANSFORM_TYPE);
            if (!IsSameArray(table2, expected2))
            {
                return false;
            }

            int[,] table3 =
            {
                { 122, 148, 10, 79, 178, 205, 139, 149, 254, 228, 154, 149, 217, 21, 90, 180, 219, 57, 109, 100, },
            };

            int[,] expected3 =
            {
                { 100, 122, 148, 10, 79, 178, 205, 139, 149, 254, 228, 154, 149, 217, 21, 90, 180, 219, 57, 109, },
            };

            Transform.TransformArray(table3, TRANSFORM_TYPE);
            if (!IsSameArray(table3, expected3))
            {
                return false;
            }

            return true;
        }

        private static bool D02()
        {
            const EMode TRANSFORM_TYPE = EMode.DiagonalShift;

            int[,] table4 =
            {
                { 157, },
                { 141, },
                { 168, },
                { 167, },
                { 12, },
                { 14, },
                { 198, },
                { 34, },
                { 230, },
                { 34, },
                { 11, },
            };

            int[,] expected4 =
            {
                { 11, },
                { 157, },
                { 141, },
                { 168, },
                { 167, },
                { 12, },
                { 14, },
                { 198, },
                { 34, },
                { 230, },
                { 34, },
            };

            Transform.TransformArray(table4, TRANSFORM_TYPE);
            if (!IsSameArray(expected4, table4))
            {
                return false;
            }

            int[,] table5 =
            {
                { 131, },
                { 209, },
                { 212, },
                { 199, },
                { 65, },
                { 157, },
                { 33, },
                { 50, },
                { 72, },
                { 72, },
                { 71, },
                { 191, },
                { 27, },
                { 149, },
                { 225, },
            };

            int[,] expected5 =
            {
                { 225, },
                { 131, },
                { 209, },
                { 212, },
                { 199, },
                { 65, },
                { 157, },
                { 33, },
                { 50, },
                { 72, },
                { 72, },
                { 71, },
                { 191, },
                { 27, },
                { 149, },
            };

            Transform.TransformArray(table5, TRANSFORM_TYPE);
            if (!IsSameArray(expected5, table5))
            {
                return false;
            }

            int[,] table6 =
            {
                { 37, },
                { 131, },
                { 110, },
                { 116, },
                { 166, },
                { 16, },
                { 207, },
                { 190, },
                { 242, },
                { 44, },
                { 60, },
                { 113, },
                { 129, },
                { 17, },
                { 165, },
                { 251, },
                { 201, },
                { 102, },
                { 231, },
                { 74, },
            };

            int[,] expected6 =
            {
                { 74, },
                { 37, },
                { 131, },
                { 110, },
                { 116, },
                { 166, },
                { 16, },
                { 207, },
                { 190, },
                { 242, },
                { 44, },
                { 60, },
                { 113, },
                { 129, },
                { 17, },
                { 165, },
                { 251, },
                { 201, },
                { 102, },
                { 231, },
            };

            Transform.TransformArray(table6, TRANSFORM_TYPE);
            if (!IsSameArray(expected6, table6))
            {
                return false;
            }

            return true;
        }

        private static bool D03()
        {
            const EMode TRANSFORM_TYPE = EMode.DiagonalShift;

            int[,] table7 =
            {
                { 59, 242, 82, 44, 81, 137, 10, 186, 222, 178, 111, },
                { 19, 88, 12, 29, 44, 89, 236, 113, 224, 55, 186, },
                { 31, 121, 168, 113, 88, 156, 131, 115, 220, 135, 252, },
                { 117, 189, 64, 65, 194, 215, 88, 210, 205, 205, 222, },
                { 133, 238, 68, 176, 85, 121, 149, 115, 117, 106, 166, },
                { 108, 108, 165, 59, 17, 63, 125, 230, 197, 154, 112, },
                { 229, 209, 106, 227, 230, 73, 221, 207, 32, 39, 186, },
                { 12, 176, 23, 164, 183, 251, 117, 141, 201, 145, 136, },
                { 123, 124, 14, 188, 72, 69, 176, 105, 250, 15, 22, },
                { 182, 233, 91, 24, 35, 153, 253, 86, 41, 134, 137, },
                { 172, 74, 108, 14, 88, 118, 247, 244, 81, 142, 186, },
            };

            int[,] expected7 =
            {
                { 186, 172, 74, 108, 14, 88, 118, 247, 244, 81, 142, },
                { 111, 59, 242, 82, 44, 81, 137, 10, 186, 222, 178, },
                { 186, 19, 88, 12, 29, 44, 89, 236, 113, 224, 55, },
                { 252, 31, 121, 168, 113, 88, 156, 131, 115, 220, 135, },
                { 222, 117, 189, 64, 65, 194, 215, 88, 210, 205, 205, },
                { 166, 133, 238, 68, 176, 85, 121, 149, 115, 117, 106, },
                { 112, 108, 108, 165, 59, 17, 63, 125, 230, 197, 154, },
                { 186, 229, 209, 106, 227, 230, 73, 221, 207, 32, 39, },
                { 136, 12, 176, 23, 164, 183, 251, 117, 141, 201, 145, },
                { 22, 123, 124, 14, 188, 72, 69, 176, 105, 250, 15, },
                { 137, 182, 233, 91, 24, 35, 153, 253, 86, 41, 134, },
            };

            Transform.TransformArray(table7, TRANSFORM_TYPE);
            if (!IsSameArray(expected7, table7))
            {
                return false;
            }

            int[,] table8 =
            {
                { 146, 37, 48, 26, 116, 72, 122, 36, 205, 57, 162, 221, 238, 245, 86, },
                { 98, 248, 150, 201, 140, 94, 42, 37, 196, 142, 76, 183, 152, 151, 162, },
                { 104, 186, 187, 181, 48, 209, 48, 206, 118, 234, 96, 142, 202, 128, 154, },
                { 117, 65, 227, 113, 35, 12, 162, 213, 236, 246, 57, 164, 222, 23, 126, },
                { 194, 94, 242, 31, 100, 160, 15, 129, 123, 240, 141, 43, 204, 19, 100, },
                { 181, 172, 11, 20, 187, 114, 184, 61, 76, 43, 252, 120, 50, 251, 179, },
                { 224, 31, 113, 215, 42, 147, 79, 153, 178, 140, 55, 226, 105, 80, 251, },
                { 226, 45, 217, 69, 196, 163, 20, 83, 164, 28, 36, 200, 44, 243, 107, },
                { 209, 107, 134, 200, 236, 78, 168, 169, 181, 210, 130, 123, 237, 196, 224, },
                { 119, 196, 214, 156, 111, 63, 115, 238, 35, 241, 131, 48, 180, 185, 172, },
                { 101, 237, 190, 125, 147, 234, 148, 183, 49, 206, 155, 115, 154, 215, 225, },
                { 38, 41, 126, 35, 114, 96, 228, 204, 28, 157, 67, 144, 97, 113, 133, },
                { 164, 104, 16, 15, 107, 174, 48, 80, 241, 87, 208, 124, 138, 28, 148, },
                { 172, 202, 168, 57, 130, 106, 219, 130, 33, 130, 10, 123, 139, 210, 16, },
                { 152, 223, 18, 120, 238, 234, 227, 109, 234, 244, 182, 55, 30, 181, 185, },
            };

            int[,] expected8 =
            {
                { 185, 152, 223, 18, 120, 238, 234, 227, 109, 234, 244, 182, 55, 30, 181, },
                { 86, 146, 37, 48, 26, 116, 72, 122, 36, 205, 57, 162, 221, 238, 245, },
                { 162, 98, 248, 150, 201, 140, 94, 42, 37, 196, 142, 76, 183, 152, 151, },
                { 154, 104, 186, 187, 181, 48, 209, 48, 206, 118, 234, 96, 142, 202, 128, },
                { 126, 117, 65, 227, 113, 35, 12, 162, 213, 236, 246, 57, 164, 222, 23, },
                { 100, 194, 94, 242, 31, 100, 160, 15, 129, 123, 240, 141, 43, 204, 19, },
                { 179, 181, 172, 11, 20, 187, 114, 184, 61, 76, 43, 252, 120, 50, 251, },
                { 251, 224, 31, 113, 215, 42, 147, 79, 153, 178, 140, 55, 226, 105, 80, },
                { 107, 226, 45, 217, 69, 196, 163, 20, 83, 164, 28, 36, 200, 44, 243, },
                { 224, 209, 107, 134, 200, 236, 78, 168, 169, 181, 210, 130, 123, 237, 196, },
                { 172, 119, 196, 214, 156, 111, 63, 115, 238, 35, 241, 131, 48, 180, 185, },
                { 225, 101, 237, 190, 125, 147, 234, 148, 183, 49, 206, 155, 115, 154, 215, },
                { 133, 38, 41, 126, 35, 114, 96, 228, 204, 28, 157, 67, 144, 97, 113, },
                { 148, 164, 104, 16, 15, 107, 174, 48, 80, 241, 87, 208, 124, 138, 28, },
                { 16, 172, 202, 168, 57, 130, 106, 219, 130, 33, 130, 10, 123, 139, 210, },
            };

            Transform.TransformArray(table8, TRANSFORM_TYPE);
            if (!IsSameArray(expected8, table8))
            {
                return false;
            }

            int[,] table9 =
            {
                { 114, 208, 11, 64, 87, 23, 122, 146, 107, 42, 150, 243, 108, 254, 229, 58, 24, 173, 89, 217, },
                { 65, 58, 184, 249, 233, 113, 134, 168, 160, 22, 109, 219, 192, 187, 93, 153, 136, 100, 204, 178, },
                { 212, 90, 193, 154, 15, 210, 198, 28, 135, 49, 53, 197, 68, 229, 132, 75, 83, 126, 203, 93, },
                { 126, 194, 153, 157, 66, 142, 215, 120, 148, 105, 70, 105, 18, 65, 247, 13, 151, 63, 139, 146, },
                { 174, 187, 169, 68, 41, 181, 172, 154, 32, 244, 237, 177, 200, 150, 152, 222, 57, 110, 93, 178, },
                { 212, 110, 221, 203, 48, 71, 148, 37, 24, 183, 15, 154, 28, 214, 59, 194, 177, 49, 89, 202, },
                { 59, 68, 31, 122, 166, 127, 142, 251, 81, 44, 20, 67, 43, 167, 213, 57, 66, 162, 24, 90, },
                { 11, 29, 185, 39, 35, 202, 16, 33, 227, 139, 190, 198, 142, 232, 236, 76, 64, 136, 79, 155, },
                { 236, 93, 102, 46, 68, 204, 188, 177, 201, 42, 149, 108, 190, 116, 77, 107, 231, 231, 208, 208, },
                { 79, 103, 17, 130, 122, 19, 240, 177, 41, 233, 81, 62, 247, 124, 174, 247, 27, 227, 242, 11, },
                { 192, 85, 59, 100, 148, 180, 156, 183, 235, 229, 57, 188, 87, 124, 177, 78, 214, 234, 166, 222, },
                { 180, 118, 129, 199, 55, 250, 64, 41, 103, 196, 231, 64, 11, 201, 84, 172, 42, 48, 252, 31, },
                { 169, 208, 41, 16, 242, 138, 51, 139, 70, 235, 114, 140, 110, 93, 149, 245, 76, 149, 95, 147, },
                { 151, 214, 166, 97, 132, 43, 164, 104, 176, 73, 237, 240, 106, 234, 223, 232, 68, 79, 134, 51, },
                { 50, 127, 174, 32, 17, 195, 224, 130, 104, 191, 230, 169, 99, 151, 209, 137, 100, 129, 212, 46, },
                { 105, 160, 153, 170, 60, 15, 48, 63, 197, 123, 133, 138, 215, 178, 18, 238, 253, 155, 44, 45, },
                { 78, 145, 45, 116, 114, 51, 42, 173, 72, 117, 135, 91, 106, 74, 86, 219, 199, 185, 122, 250, },
                { 28, 14, 172, 141, 143, 83, 57, 205, 213, 165, 37, 190, 129, 36, 109, 246, 155, 74, 112, 39, },
                { 252, 92, 219, 152, 174, 117, 181, 237, 40, 102, 67, 16, 136, 206, 40, 247, 241, 234, 203, 165, },
                { 195, 141, 128, 158, 98, 238, 56, 92, 36, 157, 143, 49, 248, 252, 155, 191, 216, 112, 96, 223, },
            };

            int[,] expected9 =
            {
                { 223, 195, 141, 128, 158, 98, 238, 56, 92, 36, 157, 143, 49, 248, 252, 155, 191, 216, 112, 96, },
                { 217, 114, 208, 11, 64, 87, 23, 122, 146, 107, 42, 150, 243, 108, 254, 229, 58, 24, 173, 89, },
                { 178, 65, 58, 184, 249, 233, 113, 134, 168, 160, 22, 109, 219, 192, 187, 93, 153, 136, 100, 204, },
                { 93, 212, 90, 193, 154, 15, 210, 198, 28, 135, 49, 53, 197, 68, 229, 132, 75, 83, 126, 203, },
                { 146, 126, 194, 153, 157, 66, 142, 215, 120, 148, 105, 70, 105, 18, 65, 247, 13, 151, 63, 139, },
                { 178, 174, 187, 169, 68, 41, 181, 172, 154, 32, 244, 237, 177, 200, 150, 152, 222, 57, 110, 93, },
                { 202, 212, 110, 221, 203, 48, 71, 148, 37, 24, 183, 15, 154, 28, 214, 59, 194, 177, 49, 89, },
                { 90, 59, 68, 31, 122, 166, 127, 142, 251, 81, 44, 20, 67, 43, 167, 213, 57, 66, 162, 24, },
                { 155, 11, 29, 185, 39, 35, 202, 16, 33, 227, 139, 190, 198, 142, 232, 236, 76, 64, 136, 79, },
                { 208, 236, 93, 102, 46, 68, 204, 188, 177, 201, 42, 149, 108, 190, 116, 77, 107, 231, 231, 208, },
                { 11, 79, 103, 17, 130, 122, 19, 240, 177, 41, 233, 81, 62, 247, 124, 174, 247, 27, 227, 242, },
                { 222, 192, 85, 59, 100, 148, 180, 156, 183, 235, 229, 57, 188, 87, 124, 177, 78, 214, 234, 166, },
                { 31, 180, 118, 129, 199, 55, 250, 64, 41, 103, 196, 231, 64, 11, 201, 84, 172, 42, 48, 252, },
                { 147, 169, 208, 41, 16, 242, 138, 51, 139, 70, 235, 114, 140, 110, 93, 149, 245, 76, 149, 95, },
                { 51, 151, 214, 166, 97, 132, 43, 164, 104, 176, 73, 237, 240, 106, 234, 223, 232, 68, 79, 134, },
                { 46, 50, 127, 174, 32, 17, 195, 224, 130, 104, 191, 230, 169, 99, 151, 209, 137, 100, 129, 212, },
                { 45, 105, 160, 153, 170, 60, 15, 48, 63, 197, 123, 133, 138, 215, 178, 18, 238, 253, 155, 44, },
                { 250, 78, 145, 45, 116, 114, 51, 42, 173, 72, 117, 135, 91, 106, 74, 86, 219, 199, 185, 122, },
                { 39, 28, 14, 172, 141, 143, 83, 57, 205, 213, 165, 37, 190, 129, 36, 109, 246, 155, 74, 112, },
                { 165, 252, 92, 219, 152, 174, 117, 181, 237, 40, 102, 67, 16, 136, 206, 40, 247, 241, 234, 203, },
            };

            Transform.TransformArray(table9, TRANSFORM_TYPE);
            if (!IsSameArray(expected9, table9))
            {
                return false;
            }

            return true;
        }

        private static bool D04()
        {
            const EMode TRANSFORM_TYPE = EMode.DiagonalShift;

            int[,] table10 =
            {
                { 63, 13, 146, 223, 249, 202, 205, 202, 54, 91, 220, },
                { 126, 141, 63, 77, 35, 188, 93, 106, 106, 145, 51, },
                { 20, 125, 114, 127, 124, 111, 102, 35, 220, 108, 79, },
                { 142, 213, 75, 84, 168, 100, 192, 154, 33, 25, 105, },
                { 10, 248, 177, 45, 131, 111, 163, 117, 131, 173, 143, },
                { 254, 33, 213, 69, 121, 76, 96, 215, 168, 56, 44, },
                { 137, 46, 54, 38, 31, 237, 215, 23, 18, 117, 61, },
            };

            int[,] expected10 =
            {
                { 61, 137, 46, 54, 38, 31, 237, 215, 23, 18, 117, },
                { 220, 63, 13, 146, 223, 249, 202, 205, 202, 54, 91, },
                { 51, 126, 141, 63, 77, 35, 188, 93, 106, 106, 145, },
                { 79, 20, 125, 114, 127, 124, 111, 102, 35, 220, 108, },
                { 105, 142, 213, 75, 84, 168, 100, 192, 154, 33, 25, },
                { 143, 10, 248, 177, 45, 131, 111, 163, 117, 131, 173, },
                { 44, 254, 33, 213, 69, 121, 76, 96, 215, 168, 56, },
            };

            Transform.TransformArray(table10, TRANSFORM_TYPE);
            if (!IsSameArray(expected10, table10))
            {
                return false;
            }

            int[,] table11 =
            {
                { 241, 93, 174, 216, 10, 199, 30, 150, 163, 153, 195, 79, 94, 96, 77, },
                { 41, 95, 184, 23, 215, 87, 70, 54, 187, 110, 47, 151, 157, 211, 68, },
                { 161, 189, 209, 223, 180, 246, 218, 244, 90, 22, 52, 16, 161, 35, 107, },
                { 250, 205, 89, 42, 204, 229, 138, 193, 165, 48, 137, 96, 146, 205, 147, },
                { 48, 196, 209, 107, 84, 157, 114, 112, 236, 91, 85, 207, 51, 187, 207, },
                { 184, 96, 29, 195, 149, 107, 63, 45, 24, 69, 205, 169, 233, 184, 254, },
                { 238, 196, 24, 208, 74, 248, 67, 49, 199, 235, 123, 99, 20, 225, 221, },
                { 153, 199, 41, 189, 110, 195, 15, 145, 70, 198, 162, 213, 120, 27, 78, },
                { 64, 87, 109, 200, 132, 243, 244, 191, 44, 117, 178, 215, 135, 41, 18, },
                { 72, 142, 72, 188, 189, 169, 154, 81, 71, 39, 197, 210, 217, 141, 147, },
                { 166, 180, 154, 228, 17, 127, 46, 175, 93, 55, 158, 211, 109, 34, 41, },
            };

            int[,] expected11 =
            {
                { 41, 166, 180, 154, 228, 17, 127, 46, 175, 93, 55, 158, 211, 109, 34, },
                { 77, 241, 93, 174, 216, 10, 199, 30, 150, 163, 153, 195, 79, 94, 96, },
                { 68, 41, 95, 184, 23, 215, 87, 70, 54, 187, 110, 47, 151, 157, 211, },
                { 107, 161, 189, 209, 223, 180, 246, 218, 244, 90, 22, 52, 16, 161, 35, },
                { 147, 250, 205, 89, 42, 204, 229, 138, 193, 165, 48, 137, 96, 146, 205, },
                { 207, 48, 196, 209, 107, 84, 157, 114, 112, 236, 91, 85, 207, 51, 187, },
                { 254, 184, 96, 29, 195, 149, 107, 63, 45, 24, 69, 205, 169, 233, 184, },
                { 221, 238, 196, 24, 208, 74, 248, 67, 49, 199, 235, 123, 99, 20, 225, },
                { 78, 153, 199, 41, 189, 110, 195, 15, 145, 70, 198, 162, 213, 120, 27, },
                { 18, 64, 87, 109, 200, 132, 243, 244, 191, 44, 117, 178, 215, 135, 41, },
                { 147, 72, 142, 72, 188, 189, 169, 154, 81, 71, 39, 197, 210, 217, 141, },
            };

            Transform.TransformArray(table11, TRANSFORM_TYPE);
            if (!IsSameArray(expected11, table11))
            {
                return false;
            }

            int[,] table12 =
            {
                { 179, 232, 235, 229, 215, 77, 62, 88, 89, 44, 107, 236, 251, 164, 77, 214, 144, 108, 116, 190, },
                { 186, 151, 209, 231, 188, 196, 235, 225, 141, 81, 245, 40, 164, 21, 104, 40, 62, 191, 231, 86, },
                { 155, 26, 11, 161, 148, 23, 242, 36, 160, 215, 211, 210, 194, 60, 103, 155, 113, 205, 93, 136, },
                { 228, 80, 239, 10, 25, 120, 192, 105, 235, 114, 24, 173, 166, 193, 150, 178, 116, 62, 103, 40, },
                { 250, 233, 22, 47, 128, 142, 13, 111, 15, 119, 132, 174, 223, 251, 48, 80, 188, 154, 96, 201, },
                { 233, 206, 105, 164, 210, 168, 94, 251, 80, 190, 222, 196, 183, 54, 148, 123, 203, 118, 201, 158, },
                { 108, 114, 148, 157, 118, 211, 96, 116, 100, 144, 137, 45, 169, 66, 225, 195, 23, 95, 151, 92, },
                { 108, 153, 37, 224, 240, 120, 193, 127, 31, 205, 226, 49, 104, 153, 57, 76, 135, 25, 66, 181, },
                { 55, 160, 130, 83, 103, 229, 247, 169, 147, 219, 72, 145, 242, 175, 83, 12, 174, 57, 18, 250, },
                { 143, 136, 230, 84, 217, 77, 210, 107, 115, 68, 113, 13, 132, 16, 239, 170, 251, 85, 191, 13, },
                { 79, 186, 210, 41, 24, 37, 235, 174, 232, 79, 179, 166, 66, 43, 154, 185, 95, 156, 44, 228, },
                { 208, 69, 201, 169, 155, 26, 168, 206, 93, 166, 244, 128, 227, 181, 99, 139, 21, 168, 220, 205, },
                { 148, 246, 177, 134, 135, 86, 67, 31, 248, 205, 242, 19, 104, 94, 213, 14, 72, 77, 139, 140, },
                { 70, 225, 23, 121, 44, 159, 103, 195, 173, 217, 207, 178, 137, 80, 24, 171, 141, 62, 134, 12, },
                { 103, 242, 166, 207, 33, 51, 176, 155, 121, 160, 121, 58, 58, 63, 168, 179, 225, 63, 82, 12, },
            };

            int[,] expected12 =
            {
                { 12, 103, 242, 166, 207, 33, 51, 176, 155, 121, 160, 121, 58, 58, 63, 168, 179, 225, 63, 82, },
                { 190, 179, 232, 235, 229, 215, 77, 62, 88, 89, 44, 107, 236, 251, 164, 77, 214, 144, 108, 116, },
                { 86, 186, 151, 209, 231, 188, 196, 235, 225, 141, 81, 245, 40, 164, 21, 104, 40, 62, 191, 231, },
                { 136, 155, 26, 11, 161, 148, 23, 242, 36, 160, 215, 211, 210, 194, 60, 103, 155, 113, 205, 93, },
                { 40, 228, 80, 239, 10, 25, 120, 192, 105, 235, 114, 24, 173, 166, 193, 150, 178, 116, 62, 103, },
                { 201, 250, 233, 22, 47, 128, 142, 13, 111, 15, 119, 132, 174, 223, 251, 48, 80, 188, 154, 96, },
                { 158, 233, 206, 105, 164, 210, 168, 94, 251, 80, 190, 222, 196, 183, 54, 148, 123, 203, 118, 201, },
                { 92, 108, 114, 148, 157, 118, 211, 96, 116, 100, 144, 137, 45, 169, 66, 225, 195, 23, 95, 151, },
                { 181, 108, 153, 37, 224, 240, 120, 193, 127, 31, 205, 226, 49, 104, 153, 57, 76, 135, 25, 66, },
                { 250, 55, 160, 130, 83, 103, 229, 247, 169, 147, 219, 72, 145, 242, 175, 83, 12, 174, 57, 18, },
                { 13, 143, 136, 230, 84, 217, 77, 210, 107, 115, 68, 113, 13, 132, 16, 239, 170, 251, 85, 191, },
                { 228, 79, 186, 210, 41, 24, 37, 235, 174, 232, 79, 179, 166, 66, 43, 154, 185, 95, 156, 44, },
                { 205, 208, 69, 201, 169, 155, 26, 168, 206, 93, 166, 244, 128, 227, 181, 99, 139, 21, 168, 220, },
                { 140, 148, 246, 177, 134, 135, 86, 67, 31, 248, 205, 242, 19, 104, 94, 213, 14, 72, 77, 139, },
                { 12, 70, 225, 23, 121, 44, 159, 103, 195, 173, 217, 207, 178, 137, 80, 24, 171, 141, 62, 134, },
            };

            Transform.TransformArray(table12, TRANSFORM_TYPE);
            if (!IsSameArray(expected12, table12))
            {
                return false;
            }

            return true;
        }

        private static bool D05()
        {
            const EMode TRANSFORM_TYPE = EMode.DiagonalShift;

            int[,] table13 =
            {
                { 168, 29, 87, 120, 51, 145, 239, },
                { 186, 122, 236, 40, 24, 128, 186, },
                { 53, 166, 222, 61, 145, 254, 23, },
                { 13, 25, 25, 139, 211, 154, 131, },
                { 153, 112, 183, 185, 33, 164, 128, },
                { 106, 240, 205, 188, 169, 150, 23, },
                { 190, 221, 163, 223, 22, 44, 169, },
                { 226, 179, 30, 110, 248, 146, 145, },
                { 34, 161, 151, 110, 64, 43, 227, },
                { 227, 206, 216, 237, 159, 132, 207, },
                { 100, 218, 159, 78, 66, 193, 248, },
            };

            int[,] expected13 =
            {
                { 248, 100, 218, 159, 78, 66, 193, },
                { 239, 168, 29, 87, 120, 51, 145, },
                { 186, 186, 122, 236, 40, 24, 128, },
                { 23, 53, 166, 222, 61, 145, 254, },
                { 131, 13, 25, 25, 139, 211, 154, },
                { 128, 153, 112, 183, 185, 33, 164, },
                { 23, 106, 240, 205, 188, 169, 150, },
                { 169, 190, 221, 163, 223, 22, 44, },
                { 145, 226, 179, 30, 110, 248, 146, },
                { 227, 34, 161, 151, 110, 64, 43, },
                { 207, 227, 206, 216, 237, 159, 132, },
            };

            Transform.TransformArray(table13, TRANSFORM_TYPE);
            if (!IsSameArray(expected13, table13))
            {
                return false;
            }

            int[,] table14 =
            {
                { 97, 13, 189, 86, 12, 246, 224, 183, 236, 45, 252, },
                { 221, 239, 152, 163, 55, 30, 99, 18, 101, 28, 216, },
                { 141, 110, 10, 78, 48, 204, 170, 249, 54, 197, 117, },
                { 119, 102, 94, 185, 89, 102, 161, 221, 78, 233, 114, },
                { 254, 237, 142, 231, 156, 127, 153, 120, 18, 131, 120, },
                { 192, 34, 111, 17, 94, 165, 34, 130, 122, 136, 31, },
                { 77, 109, 246, 202, 87, 190, 200, 154, 237, 120, 224, },
                { 200, 51, 150, 81, 99, 151, 209, 126, 173, 171, 227, },
                { 29, 62, 32, 222, 128, 140, 148, 226, 14, 67, 76, },
                { 33, 248, 156, 32, 38, 190, 85, 29, 227, 147, 65, },
                { 29, 101, 227, 210, 36, 79, 198, 157, 109, 11, 147, },
                { 44, 157, 106, 116, 157, 15, 93, 18, 38, 173, 128, },
                { 118, 45, 208, 233, 232, 199, 193, 167, 94, 10, 71, },
                { 187, 51, 11, 26, 188, 81, 67, 179, 221, 43, 88, },
                { 235, 219, 185, 213, 133, 176, 117, 119, 17, 179, 76, },
            };

            int[,] expected14 =
            {
                { 76, 235, 219, 185, 213, 133, 176, 117, 119, 17, 179, },
                { 252, 97, 13, 189, 86, 12, 246, 224, 183, 236, 45, },
                { 216, 221, 239, 152, 163, 55, 30, 99, 18, 101, 28, },
                { 117, 141, 110, 10, 78, 48, 204, 170, 249, 54, 197, },
                { 114, 119, 102, 94, 185, 89, 102, 161, 221, 78, 233, },
                { 120, 254, 237, 142, 231, 156, 127, 153, 120, 18, 131, },
                { 31, 192, 34, 111, 17, 94, 165, 34, 130, 122, 136, },
                { 224, 77, 109, 246, 202, 87, 190, 200, 154, 237, 120, },
                { 227, 200, 51, 150, 81, 99, 151, 209, 126, 173, 171, },
                { 76, 29, 62, 32, 222, 128, 140, 148, 226, 14, 67, },
                { 65, 33, 248, 156, 32, 38, 190, 85, 29, 227, 147, },
                { 147, 29, 101, 227, 210, 36, 79, 198, 157, 109, 11, },
                { 128, 44, 157, 106, 116, 157, 15, 93, 18, 38, 173, },
                { 71, 118, 45, 208, 233, 232, 199, 193, 167, 94, 10, },
                { 88, 187, 51, 11, 26, 188, 81, 67, 179, 221, 43, },
            };

            Transform.TransformArray(table14, TRANSFORM_TYPE);
            if (!IsSameArray(expected14, table14))
            {
                return false;
            }

            int[,] table15 =
            {
                { 121, 135, 63, 107, 106, 237, 26, 161, 142, 184, 39, 123, 38, 109, 93, },
                { 111, 31, 49, 138, 251, 104, 117, 102, 232, 70, 125, 218, 62, 143, 251, },
                { 88, 196, 120, 56, 208, 213, 43, 77, 30, 246, 21, 24, 242, 50, 83, },
                { 166, 11, 248, 76, 43, 211, 68, 232, 91, 225, 97, 158, 128, 90, 52, },
                { 24, 253, 140, 27, 127, 236, 33, 244, 58, 122, 137, 201, 168, 103, 206, },
                { 76, 184, 90, 160, 81, 92, 171, 46, 86, 122, 101, 121, 43, 167, 186, },
                { 221, 58, 222, 145, 218, 44, 186, 123, 219, 227, 201, 147, 25, 64, 84, },
                { 51, 194, 225, 153, 112, 223, 105, 160, 144, 254, 151, 69, 103, 10, 93, },
                { 48, 29, 43, 214, 93, 132, 234, 26, 22, 35, 119, 181, 196, 68, 140, },
                { 220, 238, 36, 99, 118, 229, 47, 58, 96, 24, 177, 229, 13, 104, 237, },
                { 17, 32, 190, 163, 122, 250, 10, 57, 56, 74, 234, 69, 56, 206, 17, },
                { 243, 99, 243, 180, 15, 216, 125, 241, 182, 118, 34, 91, 49, 34, 28, },
                { 190, 88, 18, 43, 151, 219, 202, 161, 240, 12, 190, 56, 171, 88, 34, },
                { 161, 176, 26, 46, 45, 172, 125, 113, 97, 222, 41, 121, 156, 64, 180, },
                { 190, 26, 52, 246, 249, 103, 124, 157, 64, 102, 39, 250, 186, 22, 90, },
                { 174, 188, 215, 18, 38, 161, 241, 175, 164, 142, 124, 59, 25, 161, 195, },
                { 147, 78, 233, 234, 117, 152, 224, 73, 46, 241, 96, 151, 125, 152, 48, },
                { 63, 85, 103, 183, 242, 162, 80, 12, 185, 138, 169, 190, 192, 110, 11, },
                { 243, 38, 90, 47, 121, 237, 98, 193, 210, 92, 227, 130, 242, 58, 175, },
                { 90, 109, 206, 152, 151, 95, 231, 97, 116, 200, 215, 196, 247, 194, 205, },
            };

            int[,] expected15 =
            {
                { 205, 90, 109, 206, 152, 151, 95, 231, 97, 116, 200, 215, 196, 247, 194, },
                { 93, 121, 135, 63, 107, 106, 237, 26, 161, 142, 184, 39, 123, 38, 109, },
                { 251, 111, 31, 49, 138, 251, 104, 117, 102, 232, 70, 125, 218, 62, 143, },
                { 83, 88, 196, 120, 56, 208, 213, 43, 77, 30, 246, 21, 24, 242, 50, },
                { 52, 166, 11, 248, 76, 43, 211, 68, 232, 91, 225, 97, 158, 128, 90, },
                { 206, 24, 253, 140, 27, 127, 236, 33, 244, 58, 122, 137, 201, 168, 103, },
                { 186, 76, 184, 90, 160, 81, 92, 171, 46, 86, 122, 101, 121, 43, 167, },
                { 84, 221, 58, 222, 145, 218, 44, 186, 123, 219, 227, 201, 147, 25, 64, },
                { 93, 51, 194, 225, 153, 112, 223, 105, 160, 144, 254, 151, 69, 103, 10, },
                { 140, 48, 29, 43, 214, 93, 132, 234, 26, 22, 35, 119, 181, 196, 68, },
                { 237, 220, 238, 36, 99, 118, 229, 47, 58, 96, 24, 177, 229, 13, 104, },
                { 17, 17, 32, 190, 163, 122, 250, 10, 57, 56, 74, 234, 69, 56, 206, },
                { 28, 243, 99, 243, 180, 15, 216, 125, 241, 182, 118, 34, 91, 49, 34, },
                { 34, 190, 88, 18, 43, 151, 219, 202, 161, 240, 12, 190, 56, 171, 88, },
                { 180, 161, 176, 26, 46, 45, 172, 125, 113, 97, 222, 41, 121, 156, 64, },
                { 90, 190, 26, 52, 246, 249, 103, 124, 157, 64, 102, 39, 250, 186, 22, },
                { 195, 174, 188, 215, 18, 38, 161, 241, 175, 164, 142, 124, 59, 25, 161, },
                { 48, 147, 78, 233, 234, 117, 152, 224, 73, 46, 241, 96, 151, 125, 152, },
                { 11, 63, 85, 103, 183, 242, 162, 80, 12, 185, 138, 169, 190, 192, 110, },
                { 175, 243, 38, 90, 47, 121, 237, 98, 193, 210, 92, 227, 130, 242, 58, },
            };

            Transform.TransformArray(table15, TRANSFORM_TYPE);
            if (!IsSameArray(expected15, table15))
            {
                return false;
            }

            return true;
        }
    }
}